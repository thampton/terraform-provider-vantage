{
  "openapi": "3.0.1",
  "info": {
    "title": "Vantage",
    "description": "Vantage API",
    "termsOfService": "https://www.vantage.sh/terms-of-use",
    "contact": {
      "name": "Vantage Support",
      "url": "https://www.vantage.sh",
      "email": "support@vantage.sh"
    },
    "version": "2.0.0"
  },
  "servers": [
    {
      "url": "https://api.vantage.sh/v2"
    }
  ],
  "security": [
    {
      "oauth2": [
        "read"
      ]
    }
  ],
  "tags": [
    {
      "name": "Workspaces",
      "description": "Operations about Workspaces"
    },
    {
      "name": "Folders",
      "description": "Operations about Folders"
    },
    {
      "name": "Filters",
      "description": "Operations about Filters"
    },
    {
      "name": "Costs",
      "description": "Operations about Costs"
    },
    {
      "name": "Segments",
      "description": "Operations about Segments"
    },
    {
      "name": "Dashboards",
      "description": "Operations about Dashboards"
    },
    {
      "name": "Teams",
      "description": "Operations about Teams"
    },
    {
      "name": "AccessGrants",
      "description": "Operations about AccessGrants"
    },
    {
      "name": "Notifications",
      "description": "Operations about Notifications"
    },
    {
      "name": "Users",
      "description": "Operations about Users"
    },
    {
      "name": "BusinessMetrics",
      "description": "Operations about BusinessMetrics"
    },
    {
      "name": "Prices",
      "description": "Operations about Prices"
    },
    {
      "name": "ResourceReports",
      "description": "Operations about ResourceReports"
    },
    {
      "name": "FinancialCommitmentReports",
      "description": "Operations about FinancialCommitmentReports"
    },
    {
      "name": "KubernetesEfficiencyReports",
      "description": "Operations about KubernetesEfficiencyReports"
    },
    {
      "name": "AnomalyAlerts",
      "description": "Operations about AnomalyAlerts"
    },
    {
      "name": "VirtualTags",
      "description": "Operations about VirtualTags"
    },
    {
      "name": "Ping",
      "description": "Operations about Pings"
    }
  ],
  "paths": {
    "/workspaces": {
      "get": {
        "tags": [
          "Workspaces"
        ],
        "description": "Return all Workspaces that the current API token has access to.",
        "operationId": "getWorkspaces",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The amount of results to return. The maximum is 1000.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workspaces"
                },
                "example": {
                  "links": {
                    "self": "https://api.vantage.com/v2/workspaces",
                    "first": "https://api.vantage.com/v2/workspaces?page=1",
                    "next": null,
                    "last": "https://api.vantage.com/v2/workspaces?page=1",
                    "prev": null
                  },
                  "workspaces": [
                    {
                      "token": "wrkspc_f936ced69bcbf8fa",
                      "name": "Senger and Sons"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ]
      }
    },
    "/workspaces/{workspace_token}": {
      "get": {
        "tags": [
          "Workspaces"
        ],
        "description": "Return a specific Workspace.",
        "operationId": "getWorkspace",
        "parameters": [
          {
            "name": "workspace_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workspace"
                },
                "example": {
                  "token": "wrkspc_be2a1b2c1ebfa3c9",
                  "name": "Crist-Simonis"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ]
      }
    },
    "/folders": {
      "get": {
        "tags": [
          "Folders"
        ],
        "description": "Return all Folders for CostReports.",
        "operationId": "getFolders",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The amount of results to return. The maximum is 1000.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Folders"
                },
                "example": {
                  "links": {
                    "self": "https://api.vantage.com/v2/folders",
                    "first": "https://api.vantage.com/v2/folders?page=1",
                    "next": null,
                    "last": "https://api.vantage.com/v2/folders?page=1",
                    "prev": null
                  },
                  "folders": [
                    {
                      "token": "fldr_baf37f32280f5444",
                      "title": "synergy",
                      "parent_folder_token": null,
                      "created_at": "2023-09-12T05:06:54Z",
                      "updated_at": "2023-09-12T05:06:54Z",
                      "workspace_token": "wrkspc_f583a08beb76f679"
                    },
                    {
                      "token": "fldr_625d4591e46f7dfa",
                      "title": "website",
                      "parent_folder_token": "fldr_baf37f32280f5444",
                      "created_at": "2023-09-12T05:06:54Z",
                      "updated_at": "2023-09-12T05:06:54Z",
                      "workspace_token": "wrkspc_f583a08beb76f679"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Folders"
        ],
        "description": "Create a Folder for CostReports.",
        "operationId": "createFolder",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postFolders"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Folder"
                },
                "example": {
                  "token": "fldr_4aabe6f482c2a9e4",
                  "title": "New Folder",
                  "parent_folder_token": "fldr_4d29cbecf2601266",
                  "created_at": "2023-09-12T05:06:52Z",
                  "updated_at": "2023-09-12T05:06:52Z",
                  "workspace_token": "wrkspc_510cc77828001f9b"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "x-codegen-request-body-name": "Folders"
      }
    },
    "/folders/{folder_token}": {
      "get": {
        "tags": [
          "Folders"
        ],
        "description": "Return a specific Folder for CostReports.",
        "operationId": "getFolder",
        "parameters": [
          {
            "name": "folder_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Folder"
                },
                "example": {
                  "token": "fldr_3653e0f460786b1e",
                  "title": "intermediate",
                  "parent_folder_token": "fldr_b6bf120a1d3a794b",
                  "created_at": "2023-09-12T05:07:36Z",
                  "updated_at": "2023-09-12T05:07:36Z",
                  "workspace_token": "wrkspc_a707105ff54966c3"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Folders"
        ],
        "description": "Update a Folder for CostReports.",
        "operationId": "updateFolder",
        "parameters": [
          {
            "name": "folder_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/putFolders"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Folder"
                },
                "example": {
                  "token": "fldr_68e18d8d7df0be96",
                  "title": "New Title",
                  "parent_folder_token": "fldr_9aa0c735a6b615c6",
                  "created_at": "2023-09-12T05:06:53Z",
                  "updated_at": "2023-09-12T05:06:53Z",
                  "workspace_token": "wrkspc_e65a48e5d9684439"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "x-codegen-request-body-name": "Folders"
      },
      "delete": {
        "tags": [
          "Folders"
        ],
        "description": "Delete a Folder for CostReports.",
        "operationId": "deleteFolder",
        "parameters": [
          {
            "name": "folder_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Folder"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ]
      }
    },
    "/saved_filters": {
      "get": {
        "tags": [
          "Filters"
        ],
        "description": "Return all SavedFilters that can be applied to a CostReport.",
        "operationId": "getSavedFilters",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The amount of results to return. The maximum is 1000.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SavedFilters"
                },
                "example": {
                  "links": {
                    "self": "https://api.vantage.com/v2/saved_filters",
                    "first": "https://api.vantage.com/v2/saved_filters?page=1",
                    "next": null,
                    "last": "https://api.vantage.com/v2/saved_filters?page=1",
                    "prev": null
                  },
                  "saved_filters": [
                    {
                      "token": "svd_fltr_52a89bb6b1c84380",
                      "title": "White",
                      "cost_report_tokens": [
                        "rprt_fef8f7e70f993108"
                      ],
                      "filter": "(costs.provider = 'aws' AND costs.account_id = '74')",
                      "created_at": "2023-09-12T05:07:35Z",
                      "created_by": "usr_055cb925f37bfa75",
                      "workspace_token": "wrkspc_c3a582b964a67afd"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Filters"
        ],
        "description": "Create a SavedFilter for CostReports.",
        "operationId": "createSavedFilter",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postSavedFilters"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SavedFilter"
                },
                "example": {
                  "token": "svd_fltr_84a8a4e35a845f97",
                  "title": "New Saved Filter",
                  "cost_report_tokens": [],
                  "filter": "(costs.provider = 'datadog')",
                  "created_at": "2023-09-12T05:06:52Z",
                  "created_by": "usr_4011f2b8a607729d",
                  "workspace_token": "wrkspc_6f54abb1b2a5aefc"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "x-codegen-request-body-name": "SavedFilters"
      }
    },
    "/saved_filters/{saved_filter_token}": {
      "get": {
        "tags": [
          "Filters"
        ],
        "description": "Return a specific SavedFilter.",
        "operationId": "getSavedFilter",
        "parameters": [
          {
            "name": "saved_filter_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SavedFilter"
                },
                "example": {
                  "token": "svd_fltr_7d37f2b3704d1c41",
                  "title": "Black",
                  "cost_report_tokens": [
                    "rprt_267f8c135c20bf99"
                  ],
                  "filter": "(costs.provider = 'aws' AND costs.account_id = '57')",
                  "created_at": "2023-09-12T05:07:36Z",
                  "created_by": "usr_86017037cec4a852",
                  "workspace_token": "wrkspc_7020b8708f0e6556"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Filters"
        ],
        "description": "Update a SavedFilter for CostReports.",
        "operationId": "updateSavedFilter",
        "parameters": [
          {
            "name": "saved_filter_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/putSavedFilters"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SavedFilter"
                },
                "example": {
                  "token": "svd_fltr_92c840f4c76c76b3",
                  "title": "Updated Saved Filter",
                  "cost_report_tokens": [],
                  "filter": "(costs.provider = 'azure')",
                  "created_at": "2023-09-12T05:07:35Z",
                  "created_by": "usr_fcd9ff9f8aa6bd1f",
                  "workspace_token": "wrkspc_49c6865bb1f6356f"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "x-codegen-request-body-name": "SavedFilters"
      },
      "delete": {
        "tags": [
          "Filters"
        ],
        "description": "Delete a SavedFilter for CostReports.",
        "operationId": "deleteSavedFilter",
        "parameters": [
          {
            "name": "saved_filter_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SavedFilter"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ]
      }
    },
    "/cost_reports": {
      "get": {
        "tags": [
          "Costs"
        ],
        "description": "Return all CostReports.",
        "operationId": "getCostReports",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The amount of results to return. The maximum is 1000.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostReports"
                },
                "example": {
                  "links": {
                    "self": "https://api.vantage.com/v2/cost_reports",
                    "first": "https://api.vantage.com/v2/cost_reports?page=1",
                    "next": null,
                    "last": "https://api.vantage.com/v2/cost_reports?page=1",
                    "prev": null
                  },
                  "cost_reports": [
                    {
                      "token": "rprt_e97ef22efaa6da12",
                      "title": "Untitled",
                      "folder_token": null,
                      "saved_filter_tokens": [
                        "svd_fltr_cc4a422cf86f9e26"
                      ],
                      "business_metric_tokens_with_metadata": [],
                      "filter": null,
                      "groupings": "provider,service",
                      "settings": {
                        "include_credits": false,
                        "include_refunds": false,
                        "include_discounts": true,
                        "include_tax": true,
                        "amortize": true,
                        "unallocated": false
                      },
                      "created_at": "2024-03-19T15:22:54Z",
                      "workspace_token": "wrkspc_3dc89ff43657f255"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Costs"
        ],
        "description": "Create a CostReport.",
        "operationId": "createCostReport",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postCostReports"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostReport"
                },
                "example": {
                  "token": "rprt_362b04093c087475",
                  "title": "New Cost Report",
                  "folder_token": "fldr_819fe3807f88ff90",
                  "saved_filter_tokens": [
                    "svd_fltr_a50b002184902819"
                  ],
                  "business_metric_tokens_with_metadata": [
                    {
                      "business_metric_token": "bsnss_mtrc_bc0689f1b54094b1",
                      "unit_scale": "per_thousand"
                    }
                  ],
                  "filter": "costs.provider = 'aws' AND costs.service = 'Amazon Simple Storage Service'",
                  "groupings": "provider,service",
                  "settings": {
                    "include_credits": false,
                    "include_refunds": false,
                    "include_discounts": true,
                    "include_tax": true,
                    "amortize": true,
                    "unallocated": false
                  },
                  "created_at": "2024-03-19T15:22:51Z",
                  "workspace_token": "wrkspc_d50edff4c3ae23b2"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "x-codegen-request-body-name": "CostReports"
      }
    },
    "/cost_reports/{cost_report_token}": {
      "get": {
        "tags": [
          "Costs"
        ],
        "description": "Return a CostReport.",
        "operationId": "getCostReport",
        "parameters": [
          {
            "name": "cost_report_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostReport"
                },
                "example": {
                  "token": "rprt_16a4d01d67a50631",
                  "title": "Segment Report",
                  "folder_token": "fldr_fa3d9420651c11d7",
                  "business_metric_tokens_with_metadata": [],
                  "filter": null,
                  "groupings": null,
                  "settings": {
                    "include_credits": false,
                    "include_refunds": false,
                    "include_discounts": true,
                    "include_tax": true,
                    "amortize": true,
                    "unallocated": false
                  },
                  "created_at": "2024-03-19T15:22:54Z",
                  "workspace_token": "wrkspc_6a917500aba6bca8"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Costs"
        ],
        "description": "Update a CostReport.",
        "operationId": "updateCostReport",
        "parameters": [
          {
            "name": "cost_report_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/putCostReports"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostReport"
                },
                "example": {
                  "token": "rprt_77fec1422cfc25df",
                  "title": "Updated Cost Report",
                  "folder_token": "fldr_54b65b6cb9af21d0",
                  "saved_filter_tokens": [
                    "svd_fltr_33736ce7e17d7803"
                  ],
                  "business_metric_tokens_with_metadata": [
                    {
                      "business_metric_token": "bsnss_mtrc_58c57f66d35a1ad7",
                      "unit_scale": "per_thousand"
                    }
                  ],
                  "filter": "costs.provider = 'azure'",
                  "groupings": "service,account_id",
                  "settings": {
                    "include_credits": false,
                    "include_refunds": false,
                    "include_discounts": true,
                    "include_tax": true,
                    "amortize": true,
                    "unallocated": false
                  },
                  "created_at": "2024-03-19T15:22:52Z",
                  "workspace_token": "wrkspc_ca0b4a774e8fa57c"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "x-codegen-request-body-name": "CostReports"
      },
      "delete": {
        "tags": [
          "Costs"
        ],
        "description": "Delete a CostReport.",
        "operationId": "deleteCostReport",
        "parameters": [
          {
            "name": "cost_report_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostReport"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ]
      }
    },
    "/segments": {
      "get": {
        "tags": [
          "Segments"
        ],
        "description": "Return all Segments.",
        "operationId": "getSegments",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The amount of results to return. The maximum is 1000.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Segments"
                },
                "example": {
                  "links": {
                    "self": "https://api.vantage.com/v2/segments",
                    "first": "https://api.vantage.com/v2/segments?page=1",
                    "next": null,
                    "last": "https://api.vantage.com/v2/segments?page=1",
                    "prev": null
                  },
                  "segments": [
                    {
                      "token": "fltr_sgmt_0db07f2863f779cc",
                      "title": "installation",
                      "parent_segment_token": null,
                      "description": "Multi-lateral attitude-oriented process improvement",
                      "track_unallocated": false,
                      "report_settings": {
                        "include_credits": false,
                        "include_refunds": false,
                        "include_discounts": true,
                        "include_tax": true,
                        "amortize": true
                      },
                      "priority": 100,
                      "filter": "(costs.provider = 'aws')",
                      "created_at": "2024-02-02T01:02:07Z",
                      "workspace_token": "wrkspc_7036b752bf43a658"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Segments"
        ],
        "description": "Create a Segment.",
        "operationId": "createSegment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postSegments"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Segment"
                },
                "example": {
                  "token": "fltr_sgmt_1e47944f3821d5c3",
                  "title": "New Segment",
                  "parent_segment_token": "fltr_sgmt_ac17f90b94f8d00f",
                  "description": "I'm a Segment.",
                  "track_unallocated": false,
                  "priority": 100,
                  "filter": "(costs.provider = 'aws' AND costs.service = 'Amazon Simple Storage Service')",
                  "created_at": "2024-02-02T01:02:08Z",
                  "workspace_token": "wrkspc_d5d4814d5e42522c"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "x-codegen-request-body-name": "Segments"
      }
    },
    "/segments/{segment_token}": {
      "get": {
        "tags": [
          "Segments"
        ],
        "description": "Return a Segment.",
        "operationId": "getSegment",
        "parameters": [
          {
            "name": "segment_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Segment"
                },
                "example": {
                  "token": "fltr_sgmt_d1de6bdb3133d61e",
                  "title": "benchmark",
                  "parent_segment_token": null,
                  "description": "Synergized bandwidth-monitored help-desk",
                  "track_unallocated": false,
                  "report_settings": {
                    "include_credits": false,
                    "include_refunds": false,
                    "include_discounts": true,
                    "include_tax": true,
                    "amortize": true
                  },
                  "priority": 100,
                  "filter": "(costs.provider = 'aws')",
                  "created_at": "2024-02-02T01:02:09Z",
                  "workspace_token": "wrkspc_5c9b1211804105ff"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Segments"
        ],
        "description": "Update a Segment.",
        "operationId": "updateSegment",
        "parameters": [
          {
            "name": "segment_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/putSegments"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Segment"
                },
                "example": {
                  "token": "fltr_sgmt_99969c652d4df258",
                  "title": "Updated Segment",
                  "parent_segment_token": "fltr_sgmt_d8d4da2ef1751c13",
                  "description": "Ameliorated disintermediate challenge",
                  "track_unallocated": false,
                  "priority": 42,
                  "filter": "(costs.provider = 'azure')",
                  "created_at": "2024-02-02T01:05:01Z",
                  "workspace_token": "wrkspc_c144e5f763a5b05e"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "x-codegen-request-body-name": "Segments"
      },
      "delete": {
        "tags": [
          "Segments"
        ],
        "description": "Delete a Segment.",
        "operationId": "deleteSegment",
        "parameters": [
          {
            "name": "segment_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Segment"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ]
      }
    },
    "/dashboards": {
      "get": {
        "tags": [
          "Dashboards",
          "Costs"
        ],
        "description": "Return all Dashboards.",
        "operationId": "getDashboards",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The amount of results to return. The maximum is 1000.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dashboards"
                },
                "example": {
                  "links": {
                    "self": "https://api.vantage.com/v2/dashboards",
                    "first": "https://api.vantage.com/v2/dashboards?page=1",
                    "next": null,
                    "last": "https://api.vantage.com/v2/dashboards?page=1",
                    "prev": null
                  },
                  "dashboards": [
                    {
                      "token": "dshbrd_0e00316c1b6ccdf5",
                      "title": "O Jerusalem!",
                      "widget_tokens": [
                        "rprt_63e2ca172354d16a"
                      ],
                      "saved_filter_tokens": [
                        "svd_fltr_447e67636b3c789a"
                      ],
                      "date_bin": null,
                      "date_interval": null,
                      "start_date": null,
                      "end_date": null,
                      "created_at": "2024-03-04T18:49:33Z",
                      "updated_at": "2024-03-04T18:49:33Z",
                      "workspace_token": "wrkspc_d42986a4825b18c7"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Dashboards",
          "Costs"
        ],
        "description": "Create a Dashboard.",
        "operationId": "createDashboard",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postDashboards"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dashboard"
                },
                "example": {
                  "token": "dshbrd_40d2a85e60872ee4",
                  "title": "New Dashboard",
                  "widget_tokens": [
                    "rprt_d1262358f4d2de03"
                  ],
                  "saved_filter_tokens": [
                    "svd_fltr_03bae07fb40ef1e0"
                  ],
                  "date_bin": "week",
                  "date_interval": "this_month",
                  "start_date": "2023-08-01",
                  "end_date": "2023-08-31",
                  "created_at": "2023-08-15T00:00:00Z",
                  "updated_at": "2023-08-15T00:00:00Z",
                  "workspace_token": "wrkspc_7c586d05929f60b4"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "x-codegen-request-body-name": "Dashboards"
      }
    },
    "/dashboards/{dashboard_token}": {
      "get": {
        "tags": [
          "Dashboards",
          "Costs"
        ],
        "description": "Return a specific Dashboard.",
        "operationId": "getDashboard",
        "parameters": [
          {
            "name": "dashboard_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dashboard"
                },
                "example": {
                  "links": {
                    "self": "https://api.vantage.com/v2/dashboards",
                    "first": "https://api.vantage.com/v2/dashboards?page=1",
                    "next": null,
                    "last": "https://api.vantage.com/v2/dashboards?page=1",
                    "prev": null
                  },
                  "dashboards": [
                    {
                      "token": "dshbrd_77736ea6e502a481",
                      "title": "The Road Less Traveled",
                      "widget_tokens": [
                        "rprt_7d955d7fbe334706"
                      ],
                      "saved_filter_tokens": [
                        "svd_fltr_cd8f90c99b33dfa6"
                      ],
                      "date_bin": null,
                      "date_interval": null,
                      "start_date": null,
                      "end_date": null,
                      "created_at": "2024-03-04T18:49:33Z",
                      "updated_at": "2024-03-04T18:49:33Z",
                      "workspace_token": "wrkspc_863089db412905d9"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Dashboards",
          "Costs"
        ],
        "description": "Update a Dashboard.",
        "operationId": "updateDashboard",
        "parameters": [
          {
            "name": "dashboard_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/putDashboards"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dashboard"
                },
                "example": {
                  "token": "dshbrd_43f0df22a2b28fc1",
                  "title": "Updated Dashboard",
                  "widget_tokens": [
                    "rprt_1f78a31ae74c183f"
                  ],
                  "saved_filter_tokens": [
                    "svd_fltr_c90a915a9b8c4128"
                  ],
                  "date_bin": "week",
                  "date_interval": "this_month",
                  "start_date": "2023-08-01",
                  "end_date": "2023-08-31",
                  "created_at": "2024-03-04T18:49:32Z",
                  "updated_at": "2023-08-15T00:00:00Z",
                  "workspace_token": "wrkspc_1f7d72cc9302b876"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "x-codegen-request-body-name": "Dashboards"
      },
      "delete": {
        "tags": [
          "Dashboards",
          "Costs"
        ],
        "description": "Delete a Dashboard.",
        "operationId": "deleteDashboard",
        "parameters": [
          {
            "name": "dashboard_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dashboard"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ]
      }
    },
    "/costs": {
      "get": {
        "tags": [
          "Costs"
        ],
        "description": "Return all Costs for a CostReport.",
        "operationId": "getCosts",
        "parameters": [
          {
            "name": "cost_report_token",
            "in": "query",
            "description": "The CostReport token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "First date you would like to filter costs from. ISO 8601 formatted.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "Last date you would like to filter costs to. ISO 8601 formatted.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupings",
            "in": "query",
            "description": "Group the results by specific field(s). Defaults to provider, service, account_id. Valid groupings: account_id, billing_account_id, charge_type, cost_category, cost_subcategory, provider, region, resource_id, service, tagged, tag:<tag_value>. If providing multiple groupings, join as comma separated values: groupings=provider,service,region",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Whether to order costs by date in an ascending or descending manner.",
            "schema": {
              "type": "string",
              "default": "desc",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The amount of results to return. The maximum is 1000.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Costs"
                },
                "example": {
                  "links": {
                    "self": "https://api.vantage.com/v2/costs?cost_report_token=rprt_ea7dbb4f5783d677",
                    "first": "https://api.vantage.com/v2/costs?cost_report_token=rprt_ea7dbb4f5783d677&page=1",
                    "next": null,
                    "last": "https://api.vantage.com/v2/costs?cost_report_token=rprt_ea7dbb4f5783d677&page=1",
                    "prev": null
                  },
                  "total_cost": {
                    "amount": "500.0",
                    "currency": "USD"
                  },
                  "costs": [
                    {
                      "accrued_at": "2023-06-05",
                      "amount": "100.0",
                      "currency": "USD",
                      "provider": "aws",
                      "account_id": "mock_56789",
                      "service": "AmazonSNS"
                    },
                    {
                      "accrued_at": "2023-06-04",
                      "amount": "100.0",
                      "currency": "USD",
                      "provider": "aws",
                      "account_id": "mock_56789",
                      "service": "AmazonSNS"
                    },
                    {
                      "accrued_at": "2023-06-03",
                      "amount": "100.0",
                      "currency": "USD",
                      "provider": "aws",
                      "account_id": "mock_56789",
                      "service": "AmazonSNS"
                    },
                    {
                      "accrued_at": "2023-06-02",
                      "amount": "100.0",
                      "currency": "USD",
                      "provider": "aws",
                      "account_id": "mock_56789",
                      "service": "AmazonSNS"
                    },
                    {
                      "accrued_at": "2023-06-01",
                      "amount": "100.0",
                      "currency": "USD",
                      "provider": "aws",
                      "account_id": "mock_56789",
                      "service": "AmazonSNS"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "402": {
            "description": "PaymentRequired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ]
      }
    },
    "/teams": {
      "get": {
        "tags": [
          "Teams"
        ],
        "description": "Return all Teams that the current API token has access to.",
        "operationId": "getTeams",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The amount of results to return. The maximum is 1000.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Teams"
                },
                "example": {
                  "links": {
                    "self": "https://api.vantage.com/v2/teams",
                    "first": "https://api.vantage.com/v2/teams?page=1",
                    "next": null,
                    "last": "https://api.vantage.com/v2/teams?page=1",
                    "prev": null
                  },
                  "teams": [
                    {
                      "token": "team_2d4733920ec4385e",
                      "name": "New Mexico people",
                      "description": "Consequuntur ratione.",
                      "workspace_tokens": [
                        "wrkspc_08026aa5fb4c90f8"
                      ],
                      "user_tokens": [
                        "usr_c59398553e838116"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Teams"
        ],
        "description": "Create a new Team.",
        "operationId": "createTeam",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postTeams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                },
                "example": {
                  "token": "team_8467157535a30221",
                  "name": "New Team",
                  "description": "New Team Description",
                  "workspace_tokens": [
                    "wrkspc_52b6e5e663b4cde1"
                  ],
                  "user_tokens": [
                    "usr_a00e614b5843c234"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "x-codegen-request-body-name": "Teams"
      }
    },
    "/teams/{team_token}": {
      "get": {
        "tags": [
          "Teams"
        ],
        "description": "Return a specific Team.",
        "operationId": "getTeam",
        "parameters": [
          {
            "name": "team_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                },
                "example": {
                  "token": "team_081e09bbb812d369",
                  "name": "Missouri cats",
                  "description": "Voluptas et.",
                  "workspace_tokens": [
                    "wrkspc_ddc003a2f0171bf8"
                  ],
                  "user_tokens": [
                    "usr_7c309915e847cfc6"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Teams"
        ],
        "description": "Update a Team.",
        "operationId": "updateTeam",
        "parameters": [
          {
            "name": "team_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/putTeams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                },
                "example": {
                  "token": "team_d617e73dcc6b57c5",
                  "name": "Updated Team",
                  "description": "Updated Team Description",
                  "workspace_tokens": [
                    "wrkspc_efc4284a56772481"
                  ],
                  "user_tokens": [
                    "usr_d268561e520c7aac"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "x-codegen-request-body-name": "Teams"
      },
      "delete": {
        "tags": [
          "Teams"
        ],
        "description": "Delete a Team.",
        "operationId": "deleteTeam",
        "parameters": [
          {
            "name": "team_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ]
      }
    },
    "/access_grants": {
      "get": {
        "tags": [
          "AccessGrants"
        ],
        "description": "Return all Access Grants that the current API token has access to.",
        "operationId": "getAccessGrants",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The amount of results to return. The maximum is 1000.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessGrants"
                },
                "example": {
                  "links": {
                    "self": "https://api.vantage.com/v2/access_grants",
                    "first": "https://api.vantage.com/v2/access_grants?page=1",
                    "next": null,
                    "last": "https://api.vantage.com/v2/access_grants?page=1",
                    "prev": null
                  },
                  "access_grants": [
                    {
                      "token": "rsrc_accss_grnt_c40f15062b6d5c37",
                      "resource_token": "rprt_5a269d316483b01c",
                      "access": "denied",
                      "team_token": "team_fd5c524ba104712b",
                      "created_at": "2024-01-18T17:39:37Z",
                      "created_by": "usr_eb8ce6bdc1fa31d5"
                    },
                    {
                      "token": "rsrc_accss_grnt_9723e984e93d8907",
                      "resource_token": "dshbrd_a08561ec24875ac9",
                      "access": "allowed",
                      "team_token": "team_fd5c524ba104712b",
                      "created_at": "2024-01-18T17:39:37Z",
                      "created_by": "usr_eb8ce6bdc1fa31d5"
                    },
                    {
                      "token": "rsrc_accss_grnt_eee5c4fd777d4dc8",
                      "resource_token": "fldr_9d4ad1a769131c58",
                      "access": "allowed",
                      "team_token": "team_fd5c524ba104712b",
                      "created_at": "2024-01-18T17:39:38Z",
                      "created_by": "usr_eb8ce6bdc1fa31d5"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "AccessGrants"
        ],
        "description": "Create an Access Grant.",
        "operationId": "createAccessGrant",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postAccessGrants"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessGrant"
                },
                "example": {
                  "token": "rsrc_accss_grnt_9f8aeb3cedda3831",
                  "resource_token": "rprt_3b935d26cba36fb0",
                  "access": "denied",
                  "team_token": "team_26865e16e46028ae",
                  "created_at": "2024-01-18T17:39:37Z",
                  "created_by": "usr_2fc38883da3726b9"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "406": {
            "description": "NotAcceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "x-codegen-request-body-name": "AccessGrants"
      }
    },
    "/access_grants/{access_grant_token}": {
      "get": {
        "tags": [
          "AccessGrants"
        ],
        "description": "Return a specific Access Grant.",
        "operationId": "getAccessGrant",
        "parameters": [
          {
            "name": "access_grant_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessGrant"
                },
                "example": {
                  "token": "rsrc_accss_grnt_07ed83a5069b91c4",
                  "resource_token": "rprt_b8df14aa8a4ad5c7",
                  "access": "denied",
                  "team_token": "team_14bd13a8bccb8406",
                  "created_at": "2024-01-18T17:39:36Z",
                  "created_by": "usr_0e1cb254743b26cb"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "AccessGrants"
        ],
        "description": "Update an AccessGrant.",
        "operationId": "updateAccessGrant",
        "parameters": [
          {
            "name": "access_grant_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/putAccessGrants"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessGrant"
                },
                "example": {
                  "token": "rsrc_accss_grnt_eea11f0d35318b0d",
                  "resource_token": "rprt_e84d7760ab2dd7dc",
                  "access": "allowed",
                  "team_token": "team_25fc4aa890869602",
                  "created_at": "2024-01-18T17:39:36Z",
                  "created_by": "usr_57ed2fa2a7b30166"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "x-codegen-request-body-name": "AccessGrants"
      },
      "delete": {
        "tags": [
          "AccessGrants"
        ],
        "description": "Delete an Access Grant.",
        "operationId": "deleteAccessGrant",
        "parameters": [
          {
            "name": "access_grant_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessGrant"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ]
      }
    },
    "/report_notifications": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "description": "Return all ReportNotifications.",
        "operationId": "getReportNotifications",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The amount of results to return. The maximum is 1000.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportNotifications"
                },
                "example": {
                  "links": {
                    "self": "https://api.vantage.com/v2/report_notifications",
                    "first": "https://api.vantage.com/v2/report_notifications?page=1",
                    "next": null,
                    "last": "https://api.vantage.com/v2/report_notifications?page=1",
                    "prev": null
                  },
                  "report_notifications": [
                    {
                      "token": "rprt_ntfctn_7c09ca27d07d8d1e",
                      "title": "Test Notification",
                      "cost_report_token": "rprt_ba0a5a5201390d72",
                      "user_tokens": [
                        "usr_27edb13f3beac3cb"
                      ],
                      "frequency": "weekly",
                      "change": "percentage"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Notifications"
        ],
        "description": "Create a ReportNotification.",
        "operationId": "createReportNotification",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postReportNotifications"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportNotification"
                },
                "example": {
                  "token": "rprt_ntfctn_8ce31b43a149cd2e",
                  "title": "New Report Notification",
                  "cost_report_token": "rprt_933010600676b02f",
                  "user_tokens": [
                    "usr_45e7d17e9f402226"
                  ],
                  "frequency": "daily",
                  "change": "percentage"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "x-codegen-request-body-name": "ReportNotifications"
      }
    },
    "/report_notifications/{report_notification_token}": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "description": "Return a ReportNotification.",
        "operationId": "getReportNotification",
        "parameters": [
          {
            "name": "report_notification_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportNotification"
                },
                "example": {
                  "token": "rprt_ntfctn_21b4287a212406b1",
                  "title": "Test Notification",
                  "cost_report_token": "rprt_d084c84455edc606",
                  "user_tokens": [
                    "usr_56d53f802edba3e6"
                  ],
                  "frequency": "weekly",
                  "change": "percentage"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Notifications"
        ],
        "description": "Update a ReportNotification.",
        "operationId": "updateReportNotification",
        "parameters": [
          {
            "name": "report_notification_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/putReportNotifications"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportNotification"
                },
                "example": {
                  "token": "rprt_ntfctn_b36b208a90ee87f6",
                  "title": "Updated Report Notification",
                  "cost_report_token": "rprt_07b88c04aa6bed8c",
                  "user_tokens": [
                    "usr_35ed19fadcfed8c9"
                  ],
                  "frequency": "weekly",
                  "change": "dollars"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "x-codegen-request-body-name": "ReportNotifications"
      },
      "delete": {
        "tags": [
          "Notifications"
        ],
        "description": "Delete a ReportNotification.",
        "operationId": "deleteReportNotification",
        "parameters": [
          {
            "name": "report_notification_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportNotification"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ]
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Return all Users that the current API token has access to.",
        "operationId": "getUsers",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The amount of results to return. The maximum is 1000.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                },
                "example": {
                  "links": {
                    "self": "https://api.vantage.com/v2/users",
                    "first": "https://api.vantage.com/v2/users?page=1",
                    "next": null,
                    "last": "https://api.vantage.com/v2/users?page=1",
                    "prev": null
                  },
                  "users": [
                    {
                      "token": "usr_3f30f56e7773e72b",
                      "name": "Pres. Sudie Kuvalis",
                      "email": "kuvalis.sudie.pres@mckenzie-herman.net",
                      "role": "Owner"
                    },
                    {
                      "token": "usr_dc69dfedf704d4ea",
                      "name": "Carisa Tromp",
                      "email": "carisa.tromp@morissette.co",
                      "role": "Viewer"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ]
      }
    },
    "/users/{user_token}": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Return a specific User.",
        "operationId": "getUser",
        "parameters": [
          {
            "name": "user_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "example": {
                  "token": "usr_92c7273af4de2fb4",
                  "name": "Miss Shirlene Weissnat",
                  "email": "miss.shirlene.weissnat@west-howe.net",
                  "role": "Owner"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ]
      }
    },
    "/business_metrics": {
      "get": {
        "tags": [
          "BusinessMetrics"
        ],
        "description": "Return all Business Metrics that the current API token has access to.",
        "operationId": "getBusinessMetrics",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The amount of results to return. The maximum is 1000.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessMetrics"
                },
                "example": {
                  "business_metrics": [
                    {
                      "token": "bsnss_mtrc_59f5539480219769",
                      "title": "Biz Metric",
                      "created_by_token": null,
                      "cost_report_tokens_with_metadata": [],
                      "values": []
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "BusinessMetrics"
        ],
        "description": "Create a new Business Metric.",
        "operationId": "createBusinessMetric",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postBusinessMetrics"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessMetric"
                },
                "example": {
                  "token": "bsnss_mtrc_5cb1416ffdb71e45",
                  "title": "New Biz Metric",
                  "created_by_token": "usr_c7ed8af27690461d",
                  "cost_report_tokens_with_metadata": [
                    {
                      "cost_report_token": "rprt_d9456b5218e47888",
                      "unit_scale": "per_thousand"
                    }
                  ],
                  "values": [
                    {
                      "date": "2024-01-03T00:00:00Z",
                      "amount": "300.0"
                    },
                    {
                      "date": "2024-01-02T00:00:00Z",
                      "amount": "200.0"
                    },
                    {
                      "date": "2024-01-01T00:00:00Z",
                      "amount": "100.0"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "x-codegen-request-body-name": "BusinessMetrics"
      }
    },
    "/business_metrics/{business_metric_token}": {
      "get": {
        "tags": [
          "BusinessMetrics"
        ],
        "description": "Return a specific Business Metric.",
        "operationId": "getBusinessMetric",
        "parameters": [
          {
            "name": "business_metric_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessMetric"
                },
                "example": {
                  "token": "bsnss_mtrc_fef64b1f7e56165f",
                  "title": "Biz Metric",
                  "created_by_token": null,
                  "cost_report_tokens_with_metadata": [],
                  "values": []
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "BusinessMetrics"
        ],
        "description": "Updates an existing BusinessMetric.",
        "operationId": "updateBusinessMetric",
        "parameters": [
          {
            "name": "business_metric_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/putBusinessMetrics"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessMetric"
                },
                "example": {
                  "token": "bsnss_mtrc_892d49c3863e90a6",
                  "title": "New Title",
                  "created_by_token": null,
                  "cost_report_tokens_with_metadata": [
                    {
                      "cost_report_token": "rprt_8914e211c6bad755",
                      "unit_scale": "per_thousand"
                    }
                  ],
                  "values": [
                    {
                      "date": "2024-01-03T00:00:00Z",
                      "amount": "600.0"
                    },
                    {
                      "date": "2024-01-02T00:00:00Z",
                      "amount": "500.0"
                    },
                    {
                      "date": "2024-01-01T00:00:00Z",
                      "amount": "400.0"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "x-codegen-request-body-name": "BusinessMetrics"
      },
      "delete": {
        "tags": [
          "BusinessMetrics"
        ],
        "description": "Deletes an existing BusinessMetric.",
        "operationId": "deleteBusinessMetric",
        "parameters": [
          {
            "name": "business_metric_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessMetric"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ]
      }
    },
    "/business_metrics/{business_metric_token}/values.csv": {
      "put": {
        "tags": [
          "BusinessMetrics"
        ],
        "description": "Updates the values for an existing BusinessMetric from a CSV file.",
        "operationId": "updateBusinessMetricValuesCSV",
        "parameters": [
          {
            "name": "business_metric_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "csv"
                ],
                "type": "object",
                "properties": {
                  "csv": {
                    "type": "string",
                    "description": "CSV file containing BusinessMetric dates and amounts",
                    "format": "binary"
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "required": [
                  "csv"
                ],
                "type": "object",
                "properties": {
                  "csv": {
                    "type": "string",
                    "description": "CSV file containing BusinessMetric dates and amounts",
                    "format": "binary"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessMetric"
                },
                "example": {
                  "token": "bsnss_mtrc_6bc29b57fecf9ab5",
                  "title": "Biz Metric",
                  "created_by_token": null,
                  "cost_report_tokens": [],
                  "values": [
                    {
                      "date": "2024-01-03T00:00:00Z",
                      "amount": "300.3"
                    },
                    {
                      "date": "2024-01-02T00:00:00Z",
                      "amount": "200.2"
                    },
                    {
                      "date": "2024-01-01T00:00:00Z",
                      "amount": "100.1"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ]
      }
    },
    "/products": {
      "get": {
        "tags": [
          "Prices"
        ],
        "description": "Return available Products for a Service. For example, with a Provider of AWS and a Service of EC2, Products will be a list of all EC2 Instances. By default, this endpoint returns all Products across all Services and Providers but has optional query parameters for filtering listed below.",
        "operationId": "getProducts",
        "parameters": [
          {
            "name": "provider_id",
            "in": "query",
            "description": "Query by Provider to list all Products across all Services for a Provider. e.g. aws",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_id",
            "in": "query",
            "description": "Query by Service to list all Products for a specific provider service. e.g. aws-ec2",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Query by name of the Product to see a list of products which match that name. e.g. m5a.16xlarge",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The amount of results to return. The maximum is 1000",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Products"
                },
                "example": {
                  "links": {
                    "self": "https://api.vantage.com/v1/products",
                    "first": "https://api.vantage.com/v1/products?page=1",
                    "next": null,
                    "last": "https://api.vantage.com/v1/products?page=1",
                    "prev": null
                  },
                  "products": [
                    {
                      "id": "aws-ec2-m5d_16xlarge",
                      "category": "compute",
                      "name": "m5d.16xlarge",
                      "service_id": "aws-ec2",
                      "provider_id": "aws",
                      "details": {
                        "gpu": 0,
                        "name": "M5 General Purpose 16xlarge",
                        "vcpu": 64,
                        "memory": 256,
                        "clock_speed_ghz": 3.1,
                        "physical_processor_description": "Intel Xeon Platinum 8175 (Skylake)",
                        "network_performance_description": "20 Gigabit"
                      }
                    },
                    {
                      "id": "aws-ec2-c5a_8xlarge",
                      "category": "compute",
                      "name": "c5a.8xlarge",
                      "service_id": "aws-ec2",
                      "provider_id": "aws",
                      "details": {
                        "gpu": 0,
                        "name": "C5A 8xlarge",
                        "vcpu": 64,
                        "memory": 256
                      }
                    },
                    {
                      "id": "aws-ec2-c5a_4large",
                      "category": "compute",
                      "name": "c5a.4large",
                      "service_id": "aws-ec2",
                      "provider_id": "aws",
                      "details": {
                        "gpu": 0,
                        "name": "C5A 4large",
                        "vcpu": 64,
                        "memory": 4
                      }
                    },
                    {
                      "id": "aws-s3-standard",
                      "category": "object_storage",
                      "name": "standard",
                      "service_id": "aws-s3",
                      "provider_id": "aws",
                      "details": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ]
      }
    },
    "/products/{id}": {
      "get": {
        "tags": [
          "Prices"
        ],
        "description": "Return a product",
        "operationId": "getProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                },
                "example": {
                  "id": "aws-ec2-m5d_16xlarge",
                  "category": "compute",
                  "name": "m5d.16xlarge",
                  "service_id": "aws-ec2",
                  "provider_id": "aws",
                  "details": {
                    "gpu": 0,
                    "name": "M5 General Purpose 16xlarge",
                    "vcpu": 64,
                    "memory": 256,
                    "clock_speed_ghz": 3.1,
                    "physical_processor_description": "Intel Xeon Platinum 8175 (Skylake)",
                    "network_performance_description": "20 Gigabit"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ]
      }
    },
    "/products/{product_id}/prices": {
      "get": {
        "tags": [
          "Prices"
        ],
        "description": "Return available Prices across all Regions for a Product.",
        "operationId": "getPrices",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The amount of results to return. The maximum is 1000",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prices"
                },
                "example": {
                  "links": {
                    "self": "https://api.vantage.com/v1/products/aws-ec2-m5d_16xlarge/prices",
                    "first": "https://api.vantage.com/v1/products/aws-ec2-m5d_16xlarge/prices?page=1",
                    "next": null,
                    "last": "https://api.vantage.com/v1/products/aws-ec2-m5d_16xlarge/prices?page=1",
                    "prev": null
                  },
                  "prices": [
                    {
                      "id": "aws-ec2-m5d_16xlarge-eu_central_1-on_demand-linux_enterprise",
                      "unit": "hour",
                      "region": "eu-central-1",
                      "rate_type": "compute",
                      "currency": "USD",
                      "amount": 27.328,
                      "details": {
                        "platform": "linux-enterprise",
                        "lifecycle": "on-demand"
                      }
                    },
                    {
                      "id": "aws-ec2-m5d_16xlarge-us_east_1-on_demand-linux_enterprise",
                      "unit": "hour",
                      "region": "us-east-1",
                      "rate_type": "compute",
                      "currency": "USD",
                      "amount": 3.616,
                      "details": {
                        "platform": "linux-enterprise",
                        "lifecycle": "on-demand"
                      }
                    },
                    {
                      "id": "aws-ec2-m5d_16xlarge-us_east_1-on_demand-rhel",
                      "unit": "hour",
                      "region": "us-east-1",
                      "rate_type": "compute",
                      "currency": "USD",
                      "amount": 3.746,
                      "details": {
                        "platform": "rhel",
                        "lifecycle": "on-demand"
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ]
      }
    },
    "/products/{product_id}/prices/{id}": {
      "get": {
        "tags": [
          "Prices"
        ],
        "description": "Returns a price",
        "operationId": "getPrice",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Price"
                },
                "example": {
                  "id": "aws-ec2-m5d_16xlarge-eu_central_1-on_demand-linux_enterprise",
                  "unit": "hour",
                  "region": "eu-central-1",
                  "rate_type": "compute",
                  "currency": "USD",
                  "amount": 27.328,
                  "details": {
                    "platform": "linux-enterprise",
                    "lifecycle": "on-demand"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ]
      }
    },
    "/resource_reports": {
      "get": {
        "tags": [
          "ResourceReports"
        ],
        "description": "Return all ResourceReports.",
        "operationId": "getResourceReports",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return. The maximum is 1000.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceReports"
                },
                "example": {
                  "links": {
                    "self": "https://api.vantage.com/v2/provider_resource_reports",
                    "first": "https://api.vantage.com/v2/provider_resource_reports?page=1",
                    "next": null,
                    "last": "https://api.vantage.com/v2/provider_resource_reports?page=1",
                    "prev": null
                  },
                  "provider_resource_reports": [
                    {
                      "token": "prvdr_rsrc_rprt_c013a8c9280ed485",
                      "title": "Resource Report 098e130a",
                      "default": false,
                      "created_at": "2024-03-19T22:09:43Z",
                      "workspace_token": "wrkspc_5a15339e6128797f",
                      "report_token": null,
                      "user_token": null,
                      "recommendation_service": null,
                      "recommendation_category": null
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ]
      }
    },
    "/resource_reports/{resource_report_token}": {
      "get": {
        "tags": [
          "ResourceReports"
        ],
        "description": "Return a ResourceReport.",
        "operationId": "getResourceReport",
        "parameters": [
          {
            "name": "resource_report_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceReport"
                },
                "example": {
                  "token": "prvdr_rsrc_rprt_b4b9884d0bb2e121",
                  "title": "Resource Report 46d7371d",
                  "default": false,
                  "created_at": "2024-03-19T22:09:43Z",
                  "workspace_token": "wrkspc_3b72a68131df0d33",
                  "report_token": null,
                  "user_token": null,
                  "recommendation_service": null,
                  "recommendation_category": null
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "ResourceReports"
        ],
        "description": "Delete a ResourceReport.",
        "operationId": "deleteResourceReport",
        "parameters": [
          {
            "name": "resource_report_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceReport"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ]
      }
    },
    "/financial_commitment_reports": {
      "get": {
        "tags": [
          "FinancialCommitmentReports"
        ],
        "description": "Return all FinancialCommitmentReports.",
        "operationId": "getFinancialCommitmentReports",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The amount of results to return. The maximum is 1000.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialCommitmentReports"
                },
                "example": {
                  "links": {
                    "self": "https://api.vantage.com/v2/financial_commitment_reports",
                    "first": "https://api.vantage.com/v2/financial_commitment_reports?page=1",
                    "next": null,
                    "last": "https://api.vantage.com/v2/financial_commitment_reports?page=1",
                    "prev": null
                  },
                  "financial_commitment_reports": [
                    {
                      "token": "fncl_cmnt_rprt_8856c4e96c5a7a0e",
                      "title": "All Financial Commitments",
                      "default": false,
                      "created_at": "2024-03-28T18:26:26Z",
                      "workspace_token": "wrkspc_1ca9ae316e86906f",
                      "user_token": null,
                      "start_date": "2023-12-01",
                      "end_date": "2024-03-26",
                      "date_interval": "last_3_months",
                      "date_bucket": "month",
                      "groupings": "cost_type",
                      "on_demand_costs_scope": "discountable"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ]
      }
    },
    "/financial_commitment_reports/{financial_commitment_report_token}": {
      "get": {
        "tags": [
          "FinancialCommitmentReports"
        ],
        "description": "Return a FinancialCommitmentReport.",
        "operationId": "getFinancialCommitmentReport",
        "parameters": [
          {
            "name": "financial_commitment_report_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialCommitmentReport"
                },
                "example": {
                  "token": "fncl_cmnt_rprt_674cf1d6ef5f55e5",
                  "title": "All Financial Commitments",
                  "default": false,
                  "created_at": "2024-03-28T18:26:26Z",
                  "workspace_token": "wrkspc_075ac35ab0dc1b4a",
                  "user_token": null,
                  "start_date": "2023-12-01",
                  "end_date": "2024-03-26",
                  "date_interval": "last_3_months",
                  "date_bucket": "month",
                  "groupings": "cost_type",
                  "on_demand_costs_scope": "discountable"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "FinancialCommitmentReports"
        ],
        "description": "Delete a FinancialCommitmentReport.",
        "operationId": "deleteFinancialCommitmentReport",
        "parameters": [
          {
            "name": "financial_commitment_report_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialCommitmentReport"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ]
      }
    },
    "/kubernetes_efficiency_reports": {
      "get": {
        "tags": [
          "KubernetesEfficiencyReports"
        ],
        "description": "Return all KubernetesEfficiencyReports.",
        "operationId": "getKubernetesEfficiencyReports",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The amount of results to return. The maximum is 1000.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KubernetesEfficiencyReports"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ]
      }
    },
    "/kubernetes_efficiency_reports/{kubernetes_efficiency_report_token}": {
      "get": {
        "tags": [
          "KubernetesEfficiencyReports"
        ],
        "description": "Return a KubernetesEfficiencyReport.",
        "operationId": "getKubernetesEfficiencyReport",
        "parameters": [
          {
            "name": "kubernetes_efficiency_report_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KubernetesEfficiencyReport"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "KubernetesEfficiencyReports"
        ],
        "description": "Delete a KubernetesEfficiencyReport.",
        "operationId": "deleteKubernetesEfficiencyReport",
        "parameters": [
          {
            "name": "kubernetes_efficiency_report_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KubernetesEfficiencyReport"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ]
      }
    },
    "/anomaly_alerts": {
      "get": {
        "tags": [
          "AnomalyAlerts"
        ],
        "description": "Return all Anomaly Alerts that the current API token has access to.",
        "operationId": "getAnomalyAlerts",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The amount of results to return. The maximum is 1000.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnomalyAlerts"
                },
                "example": {
                  "links": {
                    "self": "https://api.vantage.com/v2/anomaly_alerts",
                    "first": "https://api.vantage.com/v2/anomaly_alerts?page=1",
                    "next": null,
                    "last": "https://api.vantage.com/v2/anomaly_alerts?page=1",
                    "prev": null
                  },
                  "anomaly_alerts": [
                    {
                      "token": "anmly_alrt_e1fb8184ecdf129d",
                      "created_at": "2024-04-01T17:14:45Z",
                      "alerted_at": "2024-04-01T17:14:45Z",
                      "category": "Compute",
                      "service": "AmazonEKS",
                      "provider": "aws",
                      "amount": "100.0",
                      "previous_amount": "25.0",
                      "seven_day_average": "10.0",
                      "status": "active",
                      "feedback": null,
                      "cost_report_token": "rprt_3d541a4c5160711f"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ]
      }
    },
    "/anomaly_alerts/{anomaly_alert_token}": {
      "get": {
        "tags": [
          "AnomalyAlerts"
        ],
        "description": "Return an AnomalyAlert that the current API token has access to.",
        "operationId": "getAnomalyAlert",
        "parameters": [
          {
            "name": "anomaly_alert_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnomalyAlert"
                },
                "example": {
                  "token": "anmly_alrt_6056b98225236ece",
                  "created_at": "2024-04-01T17:14:45Z",
                  "alerted_at": "2024-04-01T17:14:45Z",
                  "category": "Compute",
                  "service": "AmazonEKS",
                  "provider": "aws",
                  "amount": "100.0",
                  "previous_amount": "25.0",
                  "seven_day_average": "10.0",
                  "status": "active",
                  "feedback": null,
                  "cost_report_token": "rprt_bf0a30084fbf52c2"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "AnomalyAlerts"
        ],
        "description": "Update an AnomalyAlert.",
        "operationId": "updateAnomalyAlert",
        "parameters": [
          {
            "name": "anomaly_alert_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/putAnomalyAlerts"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnomalyAlert"
                },
                "example": {
                  "token": "anmly_alrt_51a2ce4137305fc6",
                  "created_at": "2024-04-01T17:14:46Z",
                  "alerted_at": "2024-04-01T17:14:46Z",
                  "category": "Compute",
                  "service": "AmazonEKS",
                  "provider": "aws",
                  "amount": "100.0",
                  "previous_amount": "25.0",
                  "seven_day_average": "10.0",
                  "status": "archived",
                  "feedback": "this stinks",
                  "cost_report_token": "rprt_57912c584fdf88f4"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "x-codegen-request-body-name": "AnomalyAlerts"
      }
    },
    "/virtual_tag_configs": {
      "get": {
        "tags": [
          "VirtualTags"
        ],
        "description": "Return all VirtualTagConfigs that the current API token has access to.",
        "operationId": "getVirtualTagConfigs",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VirtualTagConfigs"
                },
                "example": {
                  "virtual_tag_configs": [
                    {
                      "token": "vtag_ccb749939529b7f7",
                      "created_by_token": "usr_0ca549411a281e69",
                      "key": "Product Team",
                      "overridable": false,
                      "backfill_until": "2024-04-01",
                      "values": [
                        {
                          "name": "Growth",
                          "filter": "(costs.provider = 'aws' AND costs.service = 'Amazon Elastic Compute Cloud') AND (costs.provider = 'aws' AND costs.account_id IN ('1234', '5678'))"
                        },
                        {
                          "name": "API",
                          "filter": "(costs.provider = 'aws' AND costs.account_id IN ('1234', '5678')) OR (costs.provider = 'gcp' AND costs.service = 'Google Compute Engine')"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "VirtualTags"
        ],
        "description": "Create a new VirtualTagConfig.",
        "operationId": "createVirtualTagConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postVirtualTagConfigs"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VirtualTagConfig"
                },
                "example": {
                  "token": "vtag_c1b99592f248d66f",
                  "created_by_token": "usr_fe6f6665624f78d5",
                  "key": "Expense Code",
                  "overridable": false,
                  "backfill_until": "2024-04-01",
                  "values": [
                    {
                      "name": "EXPC-1234",
                      "filter": "(costs.provider = 'aws' AND costs.service = 'Amazon Elastic Compute Cloud') AND (costs.provider = 'aws' AND costs.account_id IN ('1234', '5678'))"
                    },
                    {
                      "name": "EXPC-9876",
                      "filter": "(costs.provider = 'aws' AND costs.account_id IN ('1234', '5678')) OR (costs.provider = 'gcp' AND costs.service = 'Google Compute Engine')"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "x-codegen-request-body-name": "VirtualTagConfigs"
      }
    },
    "/virtual_tag_configs/{virtual_tag_config_token}": {
      "get": {
        "tags": [
          "VirtualTags"
        ],
        "description": "Return a specific VirtualTagConfig.",
        "operationId": "getVirtualTagConfig",
        "parameters": [
          {
            "name": "virtual_tag_config_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VirtualTagConfig"
                },
                "example": {
                  "token": "vtag_fc468de2dab63564",
                  "created_by_token": "usr_cfeef60fbf97e967",
                  "key": "Product Team",
                  "overridable": false,
                  "backfill_until": "2024-04-01",
                  "values": [
                    {
                      "name": "Growth",
                      "filter": "(costs.provider = 'aws' AND costs.service = 'Amazon Elastic Compute Cloud') AND (costs.provider = 'aws' AND costs.account_id IN ('1234', '5678'))"
                    },
                    {
                      "name": "API",
                      "filter": "(costs.provider = 'aws' AND costs.account_id IN ('1234', '5678')) OR (costs.provider = 'gcp' AND costs.service = 'Google Compute Engine')"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "VirtualTags"
        ],
        "description": "Updates an existing VirtualTagConfig.",
        "operationId": "updateVirtualTagConfig",
        "parameters": [
          {
            "name": "virtual_tag_config_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/putVirtualTagConfigs"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VirtualTagConfig"
                },
                "example": {
                  "token": "vtag_4dd2d5ecc0112567",
                  "created_by_token": "usr_7c9682ee379a0d7b",
                  "key": "team",
                  "overridable": true,
                  "backfill_until": "2024-04-01",
                  "values": [
                    {
                      "name": "marketing",
                      "filter": "(costs.provider = 'aws' AND costs.service = 'Amazon Elastic Compute Cloud') AND (costs.provider = 'aws' AND costs.account_id IN ('1234', '5678'))"
                    },
                    {
                      "name": "third-party integrations",
                      "filter": "(costs.provider = 'aws' AND costs.account_id IN ('1234', '5678')) OR (costs.provider = 'gcp' AND costs.service = 'Google Compute Engine')"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "422": {
            "description": "UnprocessableEntity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "x-codegen-request-body-name": "VirtualTagConfigs"
      },
      "delete": {
        "tags": [
          "VirtualTags"
        ],
        "description": "Deletes an existing VirtualTagConfig.",
        "operationId": "deleteVirtualTagConfig",
        "parameters": [
          {
            "name": "virtual_tag_config_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VirtualTagConfig"
                }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ]
      }
    },
    "/ping": {
      "get": {
        "tags": [
          "Ping"
        ],
        "description": "This is a health check endpoint that can be used to determine Vantage API healthiness. It will return 200 if everything is running smoothly.",
        "operationId": "ping",
        "responses": {
          "200": {
            "description": "This is a health check endpoint that can be used to determine Vantage API healthiness. It will return 200 if everything is running smoothly.",
            "content": {}
          }
        },
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Workspaces": {
        "type": "object",
        "properties": {
          "links": {
            "type": "object",
            "properties": {}
          },
          "workspaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Workspace"
            }
          }
        },
        "description": "Workspaces model"
      },
      "Workspace": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "description": "The name of the Workspace.",
            "example": "Acme Corp."
          }
        },
        "description": "Workspace model"
      },
      "Errors": {
        "type": "object",
        "properties": {
          "links": {
            "type": "object",
            "properties": {}
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Errors model"
      },
      "postFolders": {
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "The title of the Folder."
          },
          "parent_folder_token": {
            "type": "string",
            "description": "The token of the parent Folder."
          },
          "saved_filter_tokens": {
            "type": "array",
            "description": "The tokens of the SavedFilters to apply to any Cost Report contained within the Folder.",
            "items": {
              "type": "string"
            }
          },
          "workspace_token": {
            "type": "string",
            "description": "The token of the Workspace to add the Folder to. Ignored if 'parent_folder_token' is set. Required if the API token is associated with multiple Workspaces."
          }
        },
        "description": "Create a Folder for CostReports."
      },
      "Folder": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "title": {
            "type": "string",
            "description": "The title of the Folder.",
            "example": "Platform Team Reports"
          },
          "parent_folder_token": {
            "type": "string",
            "description": "The token for the parent Folder, if any."
          },
          "saved_filter_tokens": {
            "type": "array",
            "description": "The tokens for the SavedFilters assigned to the Folder.",
            "items": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "description": "The date and time, in UTC, the Folder was created. ISO 8601 Formatted.",
            "example": "2023-08-04T00:00:00Z"
          },
          "updated_at": {
            "type": "string",
            "description": "The date and time, in UTC, the Folder was last updated at. ISO 8601 Formatted.",
            "example": "2023-08-04T00:00:00Z"
          },
          "workspace_token": {
            "type": "string",
            "description": "The token for the Workspace the Folder is a part of."
          }
        },
        "description": "Folder model"
      },
      "Folders": {
        "type": "object",
        "properties": {
          "links": {
            "type": "object",
            "properties": {}
          },
          "folders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Folder"
            }
          }
        },
        "description": "Folders model"
      },
      "putFolders": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "The title of the Folder."
          },
          "parent_folder_token": {
            "type": "string",
            "description": "The token of the parent Folder."
          },
          "saved_filter_tokens": {
            "type": "array",
            "description": "The tokens of the SavedFilters to apply to any Cost Report contained within the Folder.",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Update a Folder for CostReports."
      },
      "postSavedFilters": {
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "The title of the SavedFilter."
          },
          "workspace_token": {
            "type": "string",
            "description": "The Workspace to associate the SavedFilter with. Required if the API token is associated with multiple Workspaces."
          },
          "filter": {
            "type": "string",
            "description": "The filter query language to apply to the SavedFilter, which subsequently gets applied to a CostReport. Additional documentation available at https://docs.vantage.sh/vql."
          }
        },
        "description": "Create a SavedFilter for CostReports."
      },
      "SavedFilter": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "title": {
            "type": "string",
            "description": "The title of the SavedFilter.",
            "example": "Platform Team Reports"
          },
          "cost_report_tokens": {
            "type": "array",
            "description": "The tokens for any CostReports the SavedFilter is applied to.",
            "items": {
              "type": "string",
              "example": ""
            }
          },
          "filter": {
            "type": "string",
            "description": "The SavedFilter's filter, applied to any relevant CostReports. Additional documentation available at https://docs.vantage.sh/vql.",
            "example": "costs.provider = 'azure'"
          },
          "created_at": {
            "type": "string",
            "description": "The date and time, in UTC, the report was created. ISO 8601 Formatted.",
            "example": "2023-08-04T00:00:00Z"
          },
          "created_by": {
            "type": "string",
            "description": "The User who created the SavedFilter."
          },
          "workspace_token": {
            "type": "string",
            "description": "The token for the Workspace the SavedFilter is a part of."
          }
        },
        "description": "SavedFilter model"
      },
      "SavedFilters": {
        "type": "object",
        "properties": {
          "links": {
            "type": "object",
            "properties": {}
          },
          "saved_filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SavedFilter"
            }
          }
        },
        "description": "SavedFilters model"
      },
      "putSavedFilters": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "The title of the SavedFilter."
          },
          "filter": {
            "type": "string",
            "description": "The filter query language to apply to the SavedFilter, which subsequently gets applied to a CostReport. Additional documentation available at https://docs.vantage.sh/vql."
          }
        },
        "description": "Update a SavedFilter for CostReports."
      },
      "postCostReports": {
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "The title of the CostReport."
          },
          "workspace_token": {
            "type": "string",
            "description": "The token of the Workspace to add the Cost Report to. Ignored if 'folder_token' is set. Required if the API token is associated with multiple Workspaces."
          },
          "groupings": {
            "type": "string",
            "description": "Grouping values for aggregating costs on the report. Valid groupings: account_id, billing_account_id, charge_type, cost_category, cost_subcategory, provider, region, resource_id, service, tagged, tag:<tag_value>. If providing multiple groupings, join as comma separated values: groupings=provider,service,region"
          },
          "filter": {
            "type": "string",
            "description": "The filter query language to apply to the CostReport. Additional documentation available at https://docs.vantage.sh/vql."
          },
          "saved_filter_tokens": {
            "type": "array",
            "description": "The tokens of the SavedFilters to apply to the CostReport.",
            "items": {
              "type": "string"
            }
          },
          "business_metric_tokens_with_metadata": {
            "type": "array",
            "description": "The tokens for any BusinessMetrics to attach to the CostReport, and the unit scale.",
            "items": {
              "required": [
                "business_metric_token"
              ],
              "type": "object",
              "properties": {
                "business_metric_token": {
                  "type": "string",
                  "description": "The token of the BusinessMetric to attach to the CostReport."
                },
                "unit_scale": {
                  "type": "string",
                  "description": "Determines the scale of the BusinessMetric's values within the CostReport.",
                  "default": "per_unit",
                  "enum": [
                    "per_unit",
                    "per_hundred",
                    "per_thousand",
                    "per_million",
                    "per_billion"
                  ]
                }
              }
            }
          },
          "folder_token": {
            "type": "string",
            "description": "The token of the Folder to add the CostReport to. Determines the Workspace the report is assigned to."
          },
          "settings": {
            "type": "object",
            "properties": {
              "include_credits": {
                "type": "boolean",
                "description": "Report will include credits.",
                "default": false
              },
              "include_refunds": {
                "type": "boolean",
                "description": "Report will include refunds.",
                "default": false
              },
              "include_discounts": {
                "type": "boolean",
                "description": "Report will include discounts.",
                "default": true
              },
              "include_tax": {
                "type": "boolean",
                "description": "Report will include tax.",
                "default": true
              },
              "amortize": {
                "type": "boolean",
                "description": "Report will amortize.",
                "default": true
              },
              "unallocated": {
                "type": "boolean",
                "description": "Report will show unallocated costs.",
                "default": false
              }
            },
            "description": "Report settings."
          }
        },
        "description": "Create a CostReport."
      },
      "CostReport": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "title": {
            "type": "string",
            "description": "The title of the CostReport.",
            "example": "Production Environment"
          },
          "folder_token": {
            "type": "string",
            "description": "The token for the Folder the CostReport is a part of."
          },
          "saved_filter_tokens": {
            "type": "array",
            "description": "The tokens for the SavedFilters assigned to the CostReport.",
            "items": {
              "type": "string"
            }
          },
          "business_metric_tokens_with_metadata": {
            "type": "array",
            "description": "The tokens for the BusinessMetrics assigned to the CostReport, and the unit scale.",
            "items": {
              "type": "string"
            }
          },
          "filter": {
            "type": "string",
            "description": "The filter applied to the CostReport. Additional documentation available at https://docs.vantage.sh/vql."
          },
          "groupings": {
            "type": "string",
            "description": "The grouping aggregations applied to the filtered data.",
            "example": "provider, service"
          },
          "settings": {
            "type": "object",
            "properties": {
              "include_credits": {
                "type": "boolean",
                "description": "Report will include credits.",
                "default": false
              },
              "include_refunds": {
                "type": "boolean",
                "description": "Report will include refunds.",
                "default": false
              },
              "include_discounts": {
                "type": "boolean",
                "description": "Report will include discounts.",
                "default": true
              },
              "include_tax": {
                "type": "boolean",
                "description": "Report will include tax.",
                "default": true
              },
              "amortize": {
                "type": "boolean",
                "description": "Report will amortize.",
                "default": true
              },
              "unallocated": {
                "type": "boolean",
                "description": "Report will show unallocated costs.",
                "default": false
              }
            },
            "description": "Report settings."
          },
          "created_at": {
            "type": "string",
            "description": "The date and time, in UTC, the report was created. ISO 8601 Formatted.",
            "example": "2021-07-09T00:00:00Z"
          },
          "workspace_token": {
            "type": "string",
            "description": "The token for the Workspace the CostReport is a part of."
          }
        },
        "description": "CostReport model"
      },
      "CostReports": {
        "type": "object",
        "properties": {
          "links": {
            "type": "object",
            "properties": {}
          },
          "cost_reports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CostReport"
            }
          }
        },
        "description": "CostReports model"
      },
      "putCostReports": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "The title of the CostReport."
          },
          "groupings": {
            "type": "string",
            "description": "Grouping values for aggregating costs on the report. Valid groupings: account_id, billing_account_id, charge_type, cost_category, cost_subcategory, provider, region, resource_id, service, tagged, tag:<tag_value>. If providing multiple groupings, join as comma separated values: groupings=provider,service,region"
          },
          "filter": {
            "type": "string",
            "description": "The filter query language to apply to the CostReport. Additional documentation available at https://docs.vantage.sh/vql."
          },
          "saved_filter_tokens": {
            "type": "array",
            "description": "The tokens of the SavedFilters to apply to the CostReport.",
            "items": {
              "type": "string"
            }
          },
          "business_metric_tokens_with_metadata": {
            "type": "array",
            "description": "The tokens for any BusinessMetrics to attach to the CostReport, and the unit scale.",
            "items": {
              "required": [
                "business_metric_token"
              ],
              "type": "object",
              "properties": {
                "business_metric_token": {
                  "type": "string",
                  "description": "The token of the BusinessMetric to attach to the CostReport."
                },
                "unit_scale": {
                  "type": "string",
                  "description": "Determines the scale of the BusinessMetric's values within the CostReport.",
                  "default": "per_unit",
                  "enum": [
                    "per_unit",
                    "per_hundred",
                    "per_thousand",
                    "per_million",
                    "per_billion"
                  ]
                }
              }
            }
          },
          "folder_token": {
            "type": "string",
            "description": "The token of the Folder to add the CostReport to. Determines the Workspace the report is assigned to."
          },
          "settings": {
            "type": "object",
            "properties": {
              "include_credits": {
                "type": "boolean",
                "description": "Report will include credits."
              },
              "include_refunds": {
                "type": "boolean",
                "description": "Report will include refunds."
              },
              "include_discounts": {
                "type": "boolean",
                "description": "Report will include discounts."
              },
              "include_tax": {
                "type": "boolean",
                "description": "Report will include tax."
              },
              "amortize": {
                "type": "boolean",
                "description": "Report will amortize."
              },
              "unallocated": {
                "type": "boolean",
                "description": "Report will show unallocated costs."
              }
            },
            "description": "Report settings."
          }
        },
        "description": "Update a CostReport."
      },
      "postSegments": {
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "The title of the Segment."
          },
          "description": {
            "type": "string",
            "description": "The description of the Segment."
          },
          "priority": {
            "type": "integer",
            "description": "The priority of the Segment.",
            "format": "int32"
          },
          "track_unallocated": {
            "type": "boolean",
            "description": "Track Unallocated Costs which are not assigned to any of the created Segments.",
            "default": false
          },
          "report_settings": {
            "type": "object",
            "properties": {
              "include_credits": {
                "type": "boolean",
                "description": "Reports created under this Segment will include credits."
              },
              "include_refunds": {
                "type": "boolean",
                "description": "Reports created under this Segment will include refunds."
              },
              "include_discounts": {
                "type": "boolean",
                "description": "Reports created under this Segment will include discounts."
              },
              "include_tax": {
                "type": "boolean",
                "description": "Reports created under this Segment will include tax."
              },
              "amortize": {
                "type": "boolean",
                "description": "Reports created under this Segment will amortize."
              }
            },
            "description": "Report settings configurable on top-level Segments."
          },
          "workspace_token": {
            "type": "string",
            "description": "The token of the Workspace to add the Segment to. Ignored if 'segment_token' is set. Required if the API token is associated with multiple Workspaces."
          },
          "filter": {
            "type": "string",
            "description": "The filter query language to apply to the Segment. Additional documentation available at https://docs.vantage.sh/vql."
          },
          "parent_segment_token": {
            "type": "string",
            "description": "The token of the parent Segment this new Segment belongs to. Determines the Workspace the segment is assigned to."
          }
        },
        "description": "Create a Segment."
      },
      "Segment": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "title": {
            "type": "string",
            "description": "The title of the Segment.",
            "example": "OPEX"
          },
          "parent_segment_token": {
            "type": "string",
            "description": "The token of the parent Segment of this Segment."
          },
          "description": {
            "type": "string",
            "description": "The description of the Segment.",
            "example": "Operating expenses"
          },
          "track_unallocated": {
            "type": "boolean",
            "description": "Track Unallocated Costs which are not assigned to any of the created Segments.",
            "example": false
          },
          "report_settings": {
            "type": "object",
            "properties": {
              "include_credits": {
                "type": "boolean"
              },
              "include_refunds": {
                "type": "boolean"
              },
              "include_discounts": {
                "type": "boolean"
              },
              "include_tax": {
                "type": "boolean"
              },
              "amortize": {
                "type": "boolean"
              }
            },
            "description": "Report settings configurable on top-level Segments."
          },
          "priority": {
            "type": "integer",
            "description": "Costs are assigned in priority order across all Segments with assigned filters.",
            "format": "int32",
            "example": 100
          },
          "filter": {
            "type": "string",
            "description": "The filter applied to the Segment. Additional documentation available at https://docs.vantage.sh/vql."
          },
          "created_at": {
            "type": "string",
            "description": "The date and time, in UTC, the Segment was created. ISO 8601 Formatted.",
            "example": "2021-07-09T00:00:00Z"
          },
          "workspace_token": {
            "type": "string",
            "description": "The token for the Workspace the Segment is a part of."
          }
        },
        "description": "Segment model"
      },
      "Segments": {
        "type": "object",
        "properties": {
          "links": {
            "type": "object",
            "properties": {}
          },
          "segments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Segment"
            }
          }
        },
        "description": "Segments model"
      },
      "putSegments": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "The title of the Segment."
          },
          "description": {
            "type": "string",
            "description": "The description of the Segment."
          },
          "priority": {
            "type": "integer",
            "description": "The priority of the Segment.",
            "format": "int32"
          },
          "track_unallocated": {
            "type": "boolean",
            "description": "Track Unallocated Costs which are not assigned to any of the created Segments.",
            "default": false
          },
          "report_settings": {
            "type": "object",
            "properties": {
              "include_credits": {
                "type": "boolean",
                "description": "Reports created under this Segment will include credits."
              },
              "include_refunds": {
                "type": "boolean",
                "description": "Reports created under this Segment will include refunds."
              },
              "include_discounts": {
                "type": "boolean",
                "description": "Reports created under this Segment will include discounts."
              },
              "include_tax": {
                "type": "boolean",
                "description": "Reports created under this Segment will include tax."
              },
              "amortize": {
                "type": "boolean",
                "description": "Reports created under this Segment will amortize."
              }
            },
            "description": "Report settings configurable on top-level Segments."
          },
          "filter": {
            "type": "string",
            "description": "The filter query language to apply to the Segment. Additional documentation available at https://docs.vantage.sh/vql."
          },
          "parent_segment_token": {
            "type": "string",
            "description": "The token of the parent Segment this new Segment belongs to. Determines the Workspace the segment is assigned to."
          }
        },
        "description": "Update a Segment."
      },
      "postDashboards": {
        "required": [
          "end_date",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "The title of the Dashboard."
          },
          "widget_tokens": {
            "type": "array",
            "description": "The tokens of the widgets to add to the Dashboard. Currently only supports CostReport tokens.",
            "items": {
              "type": "string"
            }
          },
          "saved_filter_tokens": {
            "type": "array",
            "description": "The tokens of the Saved Filters used in the Dashboard.",
            "items": {
              "type": "string"
            }
          },
          "date_bin": {
            "type": "string",
            "description": "Determines how to group costs in the Dashboard.",
            "enum": [
              "cumulative",
              "day",
              "week",
              "month"
            ]
          },
          "date_interval": {
            "type": "string",
            "description": "Determines the date range in the Dashboard. Incompatible with 'start_date' and 'end_date' parameters.",
            "enum": [
              "this_month",
              "last_7_days",
              "last_30_days",
              "last_month",
              "last_3_months",
              "last_6_months",
              "custom",
              "last_12_months",
              "last_24_months",
              "last_36_months",
              "next_month",
              "next_3_months",
              "next_6_months",
              "next_12_months"
            ]
          },
          "start_date": {
            "type": "string",
            "description": "The start date for the date range for costs in the Dashboard. ISO 8601 Formatted. Incompatible with 'date_interval' parameter."
          },
          "end_date": {
            "type": "string",
            "description": "The end date for the date range for costs in the Dashboard. ISO 8601 Formatted. Incompatible with 'date_interval' parameter."
          },
          "workspace_token": {
            "type": "string",
            "description": "The token of the Workspace to add the Dashboard to. Required if the API token is associated with multiple Workspaces."
          }
        },
        "description": "Create a Dashboard."
      },
      "Dashboard": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "example": "dshbrd_abcd1234567890"
          },
          "title": {
            "type": "string",
            "description": "The title of the Dashboard.",
            "example": "AWS Dashboard"
          },
          "widget_tokens": {
            "type": "array",
            "description": "The tokens of the widgets displayed in the Dashboard. Currently only supports CostReport tokens.",
            "items": {
              "type": "string"
            }
          },
          "saved_filter_tokens": {
            "type": "array",
            "description": "The tokens of the Saved Filters used in the Dashboard.",
            "items": {
              "type": "string"
            }
          },
          "date_bin": {
            "type": "string",
            "description": "Determines how to group costs in the Dashboard.",
            "enum": [
              "cumulative",
              "day",
              "week",
              "month"
            ]
          },
          "date_interval": {
            "type": "string",
            "description": "Determines the date range in the Dashboard. Guaranteed to be set to 'custom' if 'start_date' and 'end_date' are set.",
            "enum": [
              "this_month",
              "last_7_days",
              "last_30_days",
              "last_month",
              "last_3_months",
              "last_6_months",
              "custom",
              "last_12_months",
              "last_24_months",
              "last_36_months",
              "next_month",
              "next_3_months",
              "next_6_months",
              "next_12_months"
            ]
          },
          "start_date": {
            "type": "string",
            "description": "The start date for the date range for CostReports in the Dashboard. ISO 8601 Formatted. Overwrites 'date_interval' if set.",
            "example": "2023-08-04"
          },
          "end_date": {
            "type": "string",
            "description": "The end date for the date range for CostReports in the Dashboard. ISO 8601 Formatted. Overwrites 'date_interval' if set.",
            "example": "2023-09-04"
          },
          "created_at": {
            "type": "string",
            "description": "The date and time, in UTC, the Dashboard was created. ISO 8601 Formatted.",
            "example": "2023-08-04T00:00:00Z"
          },
          "updated_at": {
            "type": "string",
            "description": "The date and time, in UTC, the Dashboard was created. ISO 8601 Formatted.",
            "example": "2023-08-04T00:00:00Z"
          },
          "workspace_token": {
            "type": "string",
            "description": "The token for the Workspace the Dashboard is a part of.",
            "example": "wrkspc_abcd1234567890"
          }
        },
        "description": "Dashboard model"
      },
      "Dashboards": {
        "type": "object",
        "properties": {
          "links": {
            "type": "object",
            "properties": {}
          },
          "dashboards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Dashboard"
            }
          }
        },
        "description": "Dashboards model"
      },
      "putDashboards": {
        "required": [
          "end_date"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "The title of the Dashboard."
          },
          "widget_tokens": {
            "type": "array",
            "description": "The tokens of the widgets to add to the Dashboard. Currently only supports CostReport tokens.",
            "items": {
              "type": "string"
            }
          },
          "saved_filter_tokens": {
            "type": "array",
            "description": "The tokens of the Saved Filters used in the Dashboard.",
            "items": {
              "type": "string"
            }
          },
          "date_bin": {
            "type": "string",
            "description": "Determines how to group costs in the Dashboard.",
            "enum": [
              "cumulative",
              "day",
              "week",
              "month"
            ]
          },
          "date_interval": {
            "type": "string",
            "description": "Determines the date range in the Dashboard. Incompatible with 'start_date' and 'end_date' parameters.",
            "enum": [
              "this_month",
              "last_7_days",
              "last_30_days",
              "last_month",
              "last_3_months",
              "last_6_months",
              "custom",
              "last_12_months",
              "last_24_months",
              "last_36_months",
              "next_month",
              "next_3_months",
              "next_6_months",
              "next_12_months"
            ]
          },
          "start_date": {
            "type": "string",
            "description": "The start date for the date range for costs in the Dashboard. ISO 8601 Formatted. Incompatible with 'date_interval' parameter."
          },
          "end_date": {
            "type": "string",
            "description": "The end date for the date range for costs in the Dashboard. ISO 8601 Formatted. Incompatible with 'date_interval' parameter."
          }
        },
        "description": "Update a Dashboard."
      },
      "Costs": {
        "type": "object",
        "properties": {
          "links": {
            "type": "object",
            "properties": {}
          },
          "total_cost": {
            "type": "string",
            "description": "The sum of all costs for the CostReport for the requested period, rounded to 2 decimal places, alongside the ISO 4217 currency code."
          },
          "costs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Cost"
            }
          }
        },
        "description": "Costs model"
      },
      "Cost": {
        "type": "object",
        "properties": {
          "links": {
            "type": "object",
            "properties": {}
          },
          "accrued_at": {
            "type": "string",
            "description": "The date the cost was accrued. ISO 8601 Formatted.",
            "example": "2023-09-05+00:00"
          },
          "amount": {
            "type": "string",
            "description": "The amount of the cost.",
            "example": "4.25"
          },
          "currency": {
            "type": "string",
            "description": "The currency of the cost.",
            "example": "USD"
          },
          "provider": {
            "type": "string",
            "description": "The cost provider which incurred the cost.",
            "example": "aws",
            "enum": [
              "aws",
              "azure",
              "gcp",
              "snowflake",
              "databricks",
              "mongo",
              "datadog",
              "fastly",
              "new_relic",
              "opencost",
              "open_ai",
              "oracle",
              "confluent",
              "planetscale",
              "coralogix",
              "kubernetes"
            ]
          },
          "billing_account_id": {
            "type": "string",
            "description": "The cost provider's billing account id that incurred the cost.",
            "example": "9109237192"
          },
          "account_id": {
            "type": "string",
            "description": "The cost provider's account id that incurred the cost.",
            "example": "9109237192"
          },
          "service": {
            "type": "string",
            "description": "The service which incurred the cost.",
            "example": "Amazon Elastic Compute Cloud - Compute"
          },
          "region": {
            "type": "string",
            "description": "The region which incurred the cost.",
            "example": "us-east-1"
          },
          "resource_id": {
            "type": "string",
            "description": "The resource id which incurred the cost.",
            "example": "arn:aws:ec2:us-east-1:123456789012:instance/i-1234567890abcdef0"
          },
          "tag": {
            "type": "string",
            "description": "The tag attached to the cost that was incurred.\nDEPRECATED: does not support multiple tags.",
            "example": "production"
          },
          "tags": {
            "type": "array",
            "description": "The tag pairs attached to the cost that was incurred.",
            "items": {
              "type": "string",
              "example": ""
            }
          },
          "cost_category": {
            "type": "string",
            "description": "The category for the cost.",
            "example": "Data Transfer"
          },
          "cost_subcategory": {
            "type": "string",
            "description": "The subcategory for the cost.",
            "example": "DataTransfer-Regional-Bytes"
          }
        }
      },
      "postTeams": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the Team."
          },
          "description": {
            "type": "string",
            "description": "The description of the Team."
          },
          "workspace_tokens": {
            "type": "array",
            "description": "The Workspace tokens to associate to the Team.",
            "items": {
              "type": "string"
            }
          },
          "user_tokens": {
            "type": "array",
            "description": "The User tokens to associate to the Team.",
            "items": {
              "type": "string"
            }
          },
          "user_emails": {
            "type": "array",
            "description": "The User emails to associate to the Team.",
            "items": {
              "type": "string"
            }
          },
          "role": {
            "type": "string",
            "description": "The role to assign to the provided Users. Defaults to 'editor' which has editor permissions.",
            "enum": [
              "owner",
              "editor",
              "viewer"
            ]
          }
        },
        "description": "Create a new Team."
      },
      "Team": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "description": "The name of the Team.",
            "example": "Cost Savers"
          },
          "description": {
            "type": "string",
            "description": "The description of the Team.",
            "example": "The Team that saves costs"
          },
          "workspace_tokens": {
            "type": "array",
            "description": "The tokens for any Workspaces that the Team belongs to",
            "items": {
              "type": "string",
              "example": ""
            }
          },
          "user_emails": {
            "type": "array",
            "description": "The email addresses for Users that belong to the Team",
            "items": {
              "type": "string",
              "example": ""
            }
          },
          "user_tokens": {
            "type": "array",
            "description": "The tokens for Users that belong to the Team",
            "items": {
              "type": "string",
              "example": ""
            }
          }
        },
        "description": "Team model"
      },
      "Teams": {
        "type": "object",
        "properties": {
          "links": {
            "type": "object",
            "properties": {}
          },
          "teams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Team"
            }
          }
        },
        "description": "Teams model"
      },
      "putTeams": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the Team."
          },
          "description": {
            "type": "string",
            "description": "The description of the Team."
          },
          "workspace_tokens": {
            "type": "array",
            "description": "The Workspace tokens to associate to the Team.",
            "items": {
              "type": "string"
            }
          },
          "user_tokens": {
            "type": "array",
            "description": "The User tokens to associate to the Team.",
            "items": {
              "type": "string"
            }
          },
          "user_emails": {
            "type": "array",
            "description": "The User emails to associate to the Team.",
            "items": {
              "type": "string"
            }
          },
          "role": {
            "type": "string",
            "description": "The role to assign to the provided Users. Defaults to 'editor' which has editor permissions.",
            "enum": [
              "owner",
              "editor",
              "viewer"
            ]
          }
        },
        "description": "Update a Team."
      },
      "postAccessGrants": {
        "required": [
          "resource_token",
          "team_token"
        ],
        "type": "object",
        "properties": {
          "resource_token": {
            "type": "string",
            "description": "The token of the resource for which you are granting access."
          },
          "team_token": {
            "type": "string",
            "description": "The token of the Team you want to grant access to."
          },
          "access": {
            "type": "string",
            "description": "The access level you want to grant. Defaults to 'allowed'.",
            "enum": [
              "denied",
              "allowed"
            ]
          }
        },
        "description": "Create an Access Grant."
      },
      "AccessGrant": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "resource_token": {
            "type": "string",
            "description": "The token for any resource the AccessGrant is applied to.",
            "example": "rprt_abcd1234"
          },
          "access": {
            "type": "string",
            "description": "The access status of the AccessGrant."
          },
          "team_token": {
            "type": "string",
            "description": "The Team token for which an AccessGrant is applied to."
          },
          "created_at": {
            "type": "string",
            "description": "The date and time, in UTC, the AccessGrant was created. ISO 8601 Formatted.",
            "example": "2023-08-04T00:00:00Z"
          },
          "created_by": {
            "type": "string",
            "description": "The token for the User who created the AccessGrant."
          }
        },
        "description": "AccessGrant model"
      },
      "AccessGrants": {
        "type": "object",
        "properties": {
          "links": {
            "type": "object",
            "properties": {}
          },
          "access_grants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessGrant"
            }
          }
        },
        "description": "AccessGrants model"
      },
      "putAccessGrants": {
        "required": [
          "access"
        ],
        "type": "object",
        "properties": {
          "access": {
            "type": "string",
            "description": "Allowed or denied access to resource.",
            "enum": [
              "denied",
              "allowed"
            ]
          }
        },
        "description": "Update an AccessGrant."
      },
      "postReportNotifications": {
        "required": [
          "change",
          "cost_report_token",
          "frequency",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "The title of the ReportNotification."
          },
          "cost_report_token": {
            "type": "string",
            "description": "The CostReport token."
          },
          "workspace_token": {
            "type": "string",
            "description": "The token of the Workspace to add the ReportNotification to. Required if the API token is associated with multiple Workspaces."
          },
          "user_tokens": {
            "type": "array",
            "description": "The Users that receive the notification.",
            "items": {
              "type": "string"
            }
          },
          "recipient_channels": {
            "type": "array",
            "description": "The Slack or Microsoft Teams channels that receive the notification.",
            "items": {
              "type": "string"
            }
          },
          "frequency": {
            "type": "string",
            "description": "The frequency the ReportNotification is sent. Possible values: daily, weekly, monthly."
          },
          "change": {
            "type": "string",
            "description": "The type of change the ReportNotification is tracking. Possible values: percentage, dollars."
          }
        },
        "description": "Create a ReportNotification."
      },
      "ReportNotification": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "title": {
            "type": "string",
            "description": "The title of the ReportNotification.",
            "example": "Acme Report Notification"
          },
          "cost_report_token": {
            "type": "string",
            "description": "The token for a CostReport the ReportNotification is applied to.",
            "example": "rprt_abcd1234"
          },
          "user_tokens": {
            "type": "array",
            "description": "The Users that receive the notification.",
            "items": {
              "type": "string",
              "example": ""
            }
          },
          "recipient_channels": {
            "type": "array",
            "description": "The Slack or Microsoft Teams channels that receive the notification.",
            "items": {
              "type": "string",
              "example": ""
            }
          },
          "frequency": {
            "type": "string",
            "description": "The frequency the ReportNotification is sent.",
            "example": "weekly",
            "enum": [
              "daily",
              "weekly",
              "monthly"
            ]
          },
          "change": {
            "type": "string",
            "description": "The type of change the ReportNotification is tracking.",
            "example": "percentage",
            "enum": [
              "percentage",
              "dollars"
            ]
          }
        },
        "description": "ReportNotification model"
      },
      "ReportNotifications": {
        "type": "object",
        "properties": {
          "links": {
            "type": "object",
            "properties": {}
          },
          "report_notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportNotification"
            }
          }
        },
        "description": "ReportNotifications model"
      },
      "putReportNotifications": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "The title of the ReportNotification."
          },
          "cost_report_token": {
            "type": "string",
            "description": "The CostReport token."
          },
          "user_tokens": {
            "type": "array",
            "description": "The Users that receive the notification.",
            "items": {
              "type": "string"
            }
          },
          "recipient_channels": {
            "type": "array",
            "description": "The Slack or Microsoft Teams channels that receive the notification.",
            "items": {
              "type": "string"
            }
          },
          "frequency": {
            "type": "string",
            "description": "The frequency the ReportNotification is sent. Possible values: daily, weekly, monthly."
          },
          "change": {
            "type": "string",
            "description": "The type of change the ReportNotification is tracking. Possible values: percentage, dollars."
          }
        },
        "description": "Update a ReportNotification."
      },
      "Users": {
        "type": "object",
        "properties": {
          "links": {
            "type": "object",
            "properties": {}
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          }
        },
        "description": "Users model"
      },
      "User": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "description": "The name of the User.",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "description": "The email of the User.",
            "example": "john_doe@acme.com"
          },
          "role": {
            "type": "string",
            "description": "The role of the User.",
            "example": "Admin"
          }
        },
        "description": "User model"
      },
      "postBusinessMetrics": {
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "The title of the Business Metric."
          },
          "cost_report_tokens_with_metadata": {
            "type": "array",
            "description": "The tokens for any CostReports that use the BusinessMetric, and the unit scale.",
            "items": {
              "required": [
                "cost_report_token"
              ],
              "type": "object",
              "properties": {
                "cost_report_token": {
                  "type": "string",
                  "description": "The token of the CostReport the BusinessMetric is attached to."
                },
                "unit_scale": {
                  "type": "string",
                  "description": "Determines the scale of the BusinessMetric's values within the CostReport.",
                  "default": "per_unit",
                  "enum": [
                    "per_unit",
                    "per_hundred",
                    "per_thousand",
                    "per_million",
                    "per_billion"
                  ]
                }
              }
            }
          },
          "values": {
            "type": "array",
            "description": "The dates and amounts for the BusinessMetric.",
            "items": {
              "required": [
                "amount",
                "date"
              ],
              "type": "object",
              "properties": {
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "amount": {
                  "type": "number",
                  "format": "double"
                }
              }
            }
          }
        },
        "description": "Create a new Business Metric."
      },
      "BusinessMetric": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "The token of the BusinessMetric.",
            "example": "bsnss_mtrc_1234"
          },
          "title": {
            "type": "string",
            "description": "The title of the BusinessMetric.",
            "example": "Total Revenue"
          },
          "created_by_token": {
            "type": "string",
            "description": "The token of the User who created the BusinessMetric.",
            "example": "usr_1234"
          },
          "cost_report_tokens_with_metadata": {
            "type": "array",
            "description": "The tokens for any CostReports that use the BusinessMetric, and the unit scale.",
            "items": {
              "type": "string",
              "example": ""
            }
          },
          "values": {
            "type": "array",
            "description": "The dates and amounts for the BusinessMetric",
            "items": {
              "type": "string",
              "example": ""
            }
          }
        },
        "description": "BusinessMetric model"
      },
      "BusinessMetrics": {
        "type": "object",
        "properties": {
          "business_metrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BusinessMetric"
            }
          }
        },
        "description": "BusinessMetrics model"
      },
      "putBusinessMetrics": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "The title of the BusinessMetric."
          },
          "cost_report_tokens_with_metadata": {
            "type": "array",
            "description": "The tokens for any CostReports that use the BusinessMetric, and the unit scale.",
            "items": {
              "required": [
                "cost_report_token"
              ],
              "type": "object",
              "properties": {
                "cost_report_token": {
                  "type": "string",
                  "description": "The token of the CostReport the BusinessMetric is attached to."
                },
                "unit_scale": {
                  "type": "string",
                  "description": "Determines the scale of the BusinessMetric's values within the CostReport.",
                  "default": "per_unit",
                  "enum": [
                    "per_unit",
                    "per_hundred",
                    "per_thousand",
                    "per_million",
                    "per_billion"
                  ]
                }
              }
            }
          },
          "values": {
            "type": "array",
            "description": "The dates and amounts for the BusinessMetric.",
            "items": {
              "required": [
                "amount",
                "date"
              ],
              "type": "object",
              "properties": {
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "amount": {
                  "type": "number",
                  "format": "double"
                }
              }
            }
          }
        },
        "description": "Updates an existing BusinessMetric."
      },
      "Products": {
        "type": "object",
        "properties": {
          "links": {
            "type": "object",
            "properties": {}
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Product"
            }
          }
        },
        "description": "Products model"
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "category": {
            "type": "string",
            "description": "The category of the cloud product",
            "example": "compute"
          },
          "name": {
            "type": "string",
            "description": "The common name of the product.",
            "example": "EC2"
          },
          "service_id": {
            "type": "string",
            "description": "A unique slug for the service the product belongs to.",
            "example": "aws-ec2"
          },
          "provider_id": {
            "type": "string",
            "description": "A unique slug for the provider the product belongs to.",
            "example": "aws"
          },
          "details": {
            "type": "object",
            "properties": {},
            "description": "An object of metadata about the product.",
            "example": {
              "gpu": 0,
              "name": "M5 General Purpose 16xlarge",
              "vcpu": 64,
              "memory": 256,
              "clock_speed_ghz": 3.1,
              "physical_processor_description": "Intel Xeon Platinum 8175 (Skylake)",
              "network_performance_description": "20 Gigabit"
            }
          }
        },
        "description": "Product model"
      },
      "Prices": {
        "type": "object",
        "properties": {
          "links": {
            "type": "object",
            "properties": {}
          },
          "prices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Price"
            }
          }
        },
        "description": "Prices model"
      },
      "Price": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "description": "The unit in which the amount is billed.",
            "example": "hour"
          },
          "region": {
            "type": "string",
            "description": "The region the price is specific to.",
            "example": "us-east-1"
          },
          "rate_type": {
            "type": "string",
            "description": "The part of the product the price applies to. (compute, transfer, etc..)",
            "example": "compute"
          },
          "currency": {
            "type": "string",
            "description": "The currency of the amount.",
            "example": "USD"
          },
          "amount": {
            "type": "number",
            "description": "The amount of money this specific product price costs.",
            "example": 1.324
          },
          "details": {
            "type": "object",
            "properties": {},
            "description": "Service specific metadata.",
            "example": {
              "platform": "linux-enterprise",
              "lifecycle": "on-demand"
            }
          }
        },
        "description": "Price model"
      },
      "ResourceReports": {
        "type": "object",
        "properties": {
          "links": {
            "type": "object",
            "properties": {}
          },
          "resource_reports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceReport"
            }
          }
        },
        "description": "ResourceReports model"
      },
      "ResourceReport": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "title": {
            "type": "string",
            "description": "The title of the ResourceReport.",
            "example": "Acme123 Active Resources"
          },
          "default": {
            "type": "boolean",
            "description": "Indicates whether the ResourceReport is the default report."
          },
          "created_at": {
            "type": "string",
            "description": "The date and time, in UTC, the report was created. ISO 8601 Formatted.",
            "example": "2024-03-19T00:00:00Z"
          },
          "workspace_token": {
            "type": "string",
            "description": "The token for the Workspace the ResourceReport is a part of."
          },
          "segment_token": {
            "type": "string",
            "description": "The token for the Segment the ResourceReport is a part of."
          },
          "user_token": {
            "type": "string",
            "description": "The token for the User who created this ResourceReport."
          }
        },
        "description": "ResourceReport model"
      },
      "FinancialCommitmentReports": {
        "type": "object",
        "properties": {
          "links": {
            "type": "object",
            "properties": {}
          },
          "financial_commitment_reports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FinancialCommitmentReport"
            }
          }
        },
        "description": "FinancialCommitmentReports model"
      },
      "FinancialCommitmentReport": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "title": {
            "type": "string",
            "description": "The title of the FinancialCommitmentReport.",
            "example": "Acme123 Financial Commitment Report"
          },
          "default": {
            "type": "boolean",
            "description": "Indicates whether the FinancialCommitmentReport is the default report."
          },
          "created_at": {
            "type": "string",
            "description": "The date and time, in UTC, the report was created. ISO 8601 Formatted.",
            "example": "2024-03-19T00:00:00Z"
          },
          "workspace_token": {
            "type": "string",
            "description": "The token for the Workspace the FinancialCommitmentReport is a part of."
          },
          "user_token": {
            "type": "string",
            "description": "The token for the User who created this FinancialCommitmentReport."
          },
          "start_date": {
            "type": "string",
            "description": "The start date for the FinancialCommitmentReport. Only set for custom date ranges. ISO 8601 Formatted.",
            "example": "2024-03-01"
          },
          "end_date": {
            "type": "string",
            "description": "The end date for the FinancialCommitmentReport. Only set for custom date ranges. ISO 8601 Formatted.",
            "example": "2024-03-20"
          },
          "date_interval": {
            "type": "string",
            "description": "The date range for the FinancialCommitmentReport. Only present if a custom date range is not specified.",
            "example": "last_month"
          },
          "date_bucket": {
            "type": "string",
            "description": "How costs are grouped and displayed in the FinancialCommitmentReport. Possible values: day, week, month.",
            "example": "month"
          },
          "groupings": {
            "type": "string",
            "description": "The grouping aggregations applied to the filtered data.",
            "example": "cost_type, tag:account"
          },
          "on_demand_costs_scope": {
            "type": "string",
            "description": "The scope for the costs. Possible values: discountable, all.",
            "example": "discountable"
          }
        },
        "description": "FinancialCommitmentReport model"
      },
      "KubernetesEfficiencyReports": {
        "type": "object",
        "properties": {
          "links": {
            "type": "object",
            "properties": {}
          },
          "kubernetes_efficiency_reports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KubernetesEfficiencyReport"
            }
          }
        },
        "description": "KubernetesEfficiencyReports model"
      },
      "KubernetesEfficiencyReport": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "title": {
            "type": "string",
            "description": "The title of the KubernetesEfficiencyReport.",
            "example": "Acme123 Kubernetes Efficiency Metrics"
          },
          "default": {
            "type": "boolean",
            "description": "Indicates whether the KubernetesEfficiencyReport is the default report."
          },
          "created_at": {
            "type": "string",
            "description": "The date and time, in UTC, the report was created. ISO 8601 Formatted.",
            "example": "2024-03-19T00:00:00Z"
          },
          "workspace_token": {
            "type": "string",
            "description": "The token for the Workspace the KubernetesEfficiencyReport is a part of."
          },
          "user_token": {
            "type": "string",
            "description": "The token for the User who created this KubernetesEfficiencyReport."
          },
          "start_date": {
            "type": "string",
            "description": "The start date for the KubernetesEfficiencyReport. Only set for custom date ranges. ISO 8601 Formatted.",
            "example": "2024-03-01"
          },
          "end_date": {
            "type": "string",
            "description": "The end date for the KubernetesEfficiencyReport. Only set for custom date ranges. ISO 8601 Formatted.",
            "example": "2024-03-20"
          },
          "date_interval": {
            "type": "string",
            "description": "The date range for the KubernetesEfficiencyReport. Only present if a custom date range is not specified.",
            "example": "last_month"
          },
          "date_bucket": {
            "type": "string",
            "description": "How costs are grouped and displayed in the KubernetesEfficiencyReport. Possible values: day, week, month.",
            "example": "month"
          },
          "aggregated_by": {
            "type": "string",
            "description": "How costs are aggregated by. Possible values: idle_costs, amount."
          },
          "groupings": {
            "type": "string",
            "description": "The grouping aggregations applied to the filtered data.",
            "example": "cluster_id, namespace"
          }
        },
        "description": "KubernetesEfficiencyReport model"
      },
      "AnomalyAlerts": {
        "type": "object",
        "properties": {
          "links": {
            "type": "object",
            "properties": {}
          },
          "anomaly_alerts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnomalyAlert"
            }
          }
        },
        "description": "AnomalyAlerts model"
      },
      "AnomalyAlert": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "description": "The date and time, in UTC, the AnomalyAlert was created. ISO 8601 Formatted.",
            "example": "2021-07-09T00:00:00Z"
          },
          "alerted_at": {
            "type": "string",
            "description": "The date and time, in UTC, the AnomalyAlert is sent. ISO 8601 Formatted.",
            "example": "2021-07-09T00:00:00Z"
          },
          "category": {
            "type": "string",
            "description": "The category of the AnomalyAlert."
          },
          "service": {
            "type": "string",
            "description": "The provider service causing the AnomalyAlert."
          },
          "provider": {
            "type": "string",
            "description": "The provider of the service causing the AnomalyAlert."
          },
          "amount": {
            "type": "string",
            "description": "The amount observed."
          },
          "previous_amount": {
            "type": "string",
            "description": "The previous amount observed."
          },
          "seven_day_average": {
            "type": "string",
            "description": "The seven day average of the amount observed."
          },
          "status": {
            "type": "string",
            "description": "The status of the AnomalyAlert."
          },
          "feedback": {
            "type": "string",
            "description": "The user-provided feedback of why alert was ignored/archived."
          },
          "cost_report_token": {
            "type": "string",
            "description": "The token of the Report associated with the AnomalyAlert."
          }
        },
        "description": "AnomalyAlert model"
      },
      "putAnomalyAlerts": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "The status of the Anomaly Alert."
          },
          "feedback": {
            "type": "string",
            "description": "Optional additional comments for why this alert is ignored."
          }
        },
        "description": "Update an AnomalyAlert."
      },
      "postVirtualTagConfigs": {
        "required": [
          "key",
          "overridable"
        ],
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "The key of the VirtualTagConfig."
          },
          "overridable": {
            "type": "boolean",
            "description": "Whether the VirtualTagConfig can override a provider-supplied tag on a matching Cost."
          },
          "backfill_until": {
            "type": "string",
            "description": "The earliest month the VirtualTagConfig should be backfilled to.",
            "format": "date"
          },
          "values": {
            "type": "array",
            "description": "Values for the VirtualTagConfig, with match precedence determined by order in the list.",
            "items": {
              "required": [
                "name"
              ],
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the value."
                },
                "filter": {
                  "type": "string",
                  "description": "The filter query language to apply to the value. Additional documentation available at https://docs.vantage.sh/vql."
                }
              }
            }
          }
        },
        "description": "Create a new VirtualTagConfig."
      },
      "VirtualTagConfig": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "The token of the VirtualTagConfig.",
            "example": "vtag_1234"
          },
          "created_by_token": {
            "type": "string",
            "description": "The token of the User who created the VirtualTagConfig.",
            "example": "usr_1234"
          },
          "key": {
            "type": "string",
            "description": "The key of the VirtualTagConfig.",
            "example": "Cost Center"
          },
          "overridable": {
            "type": "string",
            "description": "Whether the VirtualTagConfig can override a provider-supplied tag on a matching Cost.",
            "example": "false"
          },
          "backfill_until": {
            "type": "string",
            "description": "The earliest month VirtualTagConfig should be backfilled to.",
            "example": "false"
          },
          "values": {
            "type": "array",
            "description": "Values for the VirtualTagConfig, with match precedence determined by their relative order in the list.",
            "items": {
              "type": "string",
              "example": ""
            }
          }
        },
        "description": "VirtualTagConfig model"
      },
      "VirtualTagConfigs": {
        "type": "object",
        "properties": {
          "virtual_tag_configs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VirtualTagConfig"
            }
          }
        },
        "description": "VirtualTagConfigs model"
      },
      "putVirtualTagConfigs": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "The key of the VirtualTagConfig."
          },
          "overridable": {
            "type": "boolean",
            "description": "Whether the VirtualTagConfig can override a provider-supplied tag on a matching Cost."
          },
          "backfill_until": {
            "type": "string",
            "description": "The earliest month the VirtualTagConfig should be backfilled to.",
            "format": "date"
          },
          "values": {
            "type": "array",
            "description": "Values for the VirtualTagConfig, with match precedence determined by order in the list.",
            "items": {
              "required": [
                "name"
              ],
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the value."
                },
                "filter": {
                  "type": "string",
                  "description": "The filter query language to apply to the value. Additional documentation available at https://docs.vantage.sh/vql."
                }
              }
            }
          }
        },
        "description": "Updates an existing VirtualTagConfig."
      }
    },
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://console.vantage.sh/account/profile",
            "scopes": {
              "read": "Grants read access",
              "write": "Grants write access"
            }
          }
        }
      }
    }
  },
  "x-original-swagger-version": "2.0"
}
